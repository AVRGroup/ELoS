function e(e,t,o,n){Object.defineProperty(e,t,{get:o,set:n,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},n={},s=t.parcelRequiredf3e;null==s&&((s=function(e){if(e in o)return o[e].exports;if(e in n){var t=n[e];delete n[e];var s={id:e,exports:{}};return o[e]=s,t.call(s.exports,s,s.exports),s.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,t){n[e]=t},t.parcelRequiredf3e=s),s.register("bh3qn",(function(t,o){e(t.exports,"nodeFrame",(()=>d));var n=s("l3HXE"),r=s("e6hrk"),a=s("4xklQ");const i=new WeakMap,d=new(0,r.NodeFrame);a.Material.prototype.onBuild=function(e,t,o){!0===e.material.isNodeMaterial&&i.set(this,new(0,n.WebGLNodeBuilder)(e,o,t).build())},a.Material.prototype.onBeforeRender=function(e,t,o,n,s){const r=i.get(this);if(void 0!==r){d.material=this,d.camera=o,d.object=s,d.renderer=e;const t=r.updateNodes;if(t.length>0){e.state.useProgram(null);for(const e of t)d.updateNode(e)}}}})),s.register("l3HXE",(function(t,o){e(t.exports,"WebGLNodeBuilder",(()=>f));var n=s("e6hrk"),r=s("1fGiM"),a=s("4xklQ");const i=new(0,n.NodeFrame);i.camera=new(0,a.PerspectiveCamera);const d={LineBasicNodeMaterial:a.ShaderLib.basic,MeshBasicNodeMaterial:a.ShaderLib.basic,PointsNodeMaterial:a.ShaderLib.points,MeshStandardNodeMaterial:a.ShaderLib.standard,MeshPhysicalNodeMaterial:a.ShaderLib.physical},l={[n.MathNode.ATAN2]:"atan"};function c(e){return`#include <${e}>`}function u(e){return`${e}Shader`}class f extends n.NodeBuilder{constructor(e,t,o){super(e,t,new(0,n.GLSLNodeParser)),this.shader=o,this.slots={vertex:[],fragment:[]},this._parseShaderLib(),this._parseInclude("fragment","lights_physical_fragment","clearcoat_normal_fragment_begin","transmission_fragment"),this._parseObject(),this._sortSlotsToFlow()}getMethod(e){return l[e]||e}addSlot(e,t){this.slots[e].push(t)}addFlowCode(e){/;\s*$/.test(e)||(e+=";"),super.addFlowCode(e+"\n\t")}_parseShaderLib(){const e=this.material;let t=e.type;if(e.isMeshPhysicalNodeMaterial?t="MeshPhysicalNodeMaterial":e.isMeshStandardNodeMaterial?t="MeshStandardNodeMaterial":e.isMeshBasicNodeMaterial?t="MeshBasicNodeMaterial":e.isPointsNodeMaterial?t="PointsNodeMaterial":e.isLineBasicNodeMaterial&&(t="LineBasicNodeMaterial"),void 0!==d[t]){const e=d[t],o=this.shader;o.vertexShader=e.vertexShader,o.fragmentShader=e.fragmentShader,o.uniforms=a.UniformsUtils.merge([e.uniforms,a.UniformsLib.lights])}}_parseObject(){const{material:e,renderer:t}=this;!0===t.toneMappingNode?.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.colorNode,nodeType:"vec4",source:c("tonemapping_fragment"),target:""})),e.colorNode&&e.colorNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.colorNode,nodeType:"vec4",source:"vec4 diffuseColor = vec4( diffuse, opacity );",target:"vec4 diffuseColor = %RESULT%;"})),e.opacityNode&&e.opacityNode.isNode?this.addSlot("fragment",new(0,r.default)({node:e.opacityNode,nodeType:"float",source:c("alphatest_fragment"),target:"diffuseColor.a = %RESULT%;",inclusionType:"append"})):this.addCode("fragment",c("alphatest_fragment"),"diffuseColor.a = opacity;",this.shader),e.normalNode&&e.normalNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.normalNode,nodeType:"vec3",source:c("normal_fragment_begin"),target:"normal = %RESULT%;",inclusionType:"append"})),e.emissiveNode&&e.emissiveNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.emissiveNode,nodeType:"vec3",source:c("emissivemap_fragment"),target:"totalEmissiveRadiance = %RESULT%;",inclusionType:"append"})),e.isMeshStandardNodeMaterial&&(e.metalnessNode&&e.metalnessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.metalnessNode,nodeType:"float",source:c("metalnessmap_fragment"),target:"metalnessFactor = %RESULT%;",inclusionType:"append"})),e.roughnessNode&&e.roughnessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.roughnessNode,nodeType:"float",source:c("roughnessmap_fragment"),target:"roughnessFactor = %RESULT%;",inclusionType:"append"})),e.isMeshPhysicalNodeMaterial&&(e.clearcoatNode&&e.clearcoatNode.isNode?(this.addSlot("fragment",new(0,r.default)({node:e.clearcoatNode,nodeType:"float",source:"material.clearcoat = clearcoat;",target:"material.clearcoat = %RESULT%;"})),e.clearcoatRoughnessNode&&e.clearcoatRoughnessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.clearcoatRoughnessNode,nodeType:"float",source:"material.clearcoatRoughness = clearcoatRoughness;",target:"material.clearcoatRoughness = %RESULT%;"})),e.clearcoatNormalNode&&e.clearcoatNormalNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.clearcoatNormalNode,nodeType:"vec3",source:"vec3 clearcoatNormal = geometryNormal;",target:"vec3 clearcoatNormal = %RESULT%;"})),e.defines.USE_CLEARCOAT=""):delete e.defines.USE_CLEARCOAT,e.sheenNode&&e.sheenNode.isNode?(this.addSlot("fragment",new(0,r.default)({node:e.sheenNode,nodeType:"vec3",source:"material.sheenColor = sheenColor;",target:"material.sheenColor = %RESULT%;"})),e.sheenRoughnessNode&&e.sheenRoughnessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.sheenRoughnessNode,nodeType:"float",source:"material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );",target:"material.sheenRoughness = clamp( %RESULT%, 0.07, 1.0 );"})),e.defines.USE_SHEEN=""):delete e.defines.USE_SHEEN,e.iridescenceNode&&e.iridescenceNode.isNode?(this.addSlot("fragment",new(0,r.default)({node:e.iridescenceNode,nodeType:"float",source:"material.iridescence = iridescence;",target:"material.iridescence = %RESULT%;"})),e.iridescenceIORNode&&e.iridescenceIORNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.iridescenceIORNode,nodeType:"float",source:"material.iridescenceIOR = iridescenceIOR;",target:"material.iridescenceIOR = %RESULT%;"})),e.iridescenceThicknessNode&&e.iridescenceThicknessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.iridescenceThicknessNode,nodeType:"float",source:"material.iridescenceThickness = iridescenceThicknessMaximum;",target:"material.iridescenceThickness = %RESULT%;"})),e.defines.USE_IRIDESCENCE=""):delete e.defines.USE_IRIDESCENCE,e.iorNode&&e.iorNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.iorNode,nodeType:"float",source:"material.ior = ior;",target:"material.ior = %RESULT%;"})),e.specularColorNode&&e.specularColorNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.specularColorNode,nodeType:"vec3",source:"vec3 specularColorFactor = specularColor;",target:"vec3 specularColorFactor = %RESULT%;"})),e.specularIntensityNode&&e.specularIntensityNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.specularIntensityNode,nodeType:"float",source:"float specularIntensityFactor = specularIntensity;",target:"float specularIntensityFactor = %RESULT%;"})),e.transmissionNode&&e.transmissionNode.isNode?(this.addSlot("fragment",new(0,r.default)({node:e.transmissionNode,nodeType:"float",source:"material.transmission = transmission;",target:"material.transmission = %RESULT%;"})),e.thicknessNode&&e.thicknessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.thicknessNode,nodeType:"float",source:"material.thickness = thickness;",target:"material.thickness = %RESULT%;"})),e.thicknessNode&&e.thicknessNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.thicknessNode,nodeType:"float",source:"material.thickness = thickness;",target:"material.thickness = %RESULT%;"})),e.attenuationDistanceNode&&e.attenuationDistanceNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.attenuationDistanceNode,nodeType:"float",source:"material.attenuationDistance = attenuationDistance;",target:"material.attenuationDistance = %RESULT%;"})),e.attenuationColorNode&&e.attenuationColorNode.isNode&&this.addSlot("fragment",new(0,r.default)({node:e.attenuationColorNode,nodeType:"vec3",source:"material.attenuationColor = attenuationColor;",target:"material.attenuationColor = %RESULT%;"})),e.transmission=1,e.defines.USE_TRANSMISSION=""):(e.transmission=0,delete e.defines.USE_TRANSMISSION))),e.positionNode&&e.positionNode.isNode&&this.addSlot("vertex",new(0,r.default)({node:e.positionNode,nodeType:"vec3",source:c("begin_vertex"),target:"transformed = %RESULT%;",inclusionType:"append"})),e.sizeNode&&e.sizeNode.isNode&&this.addSlot("vertex",new(0,r.default)({node:e.sizeNode,nodeType:"float",source:"gl_PointSize = size;",target:"gl_PointSize = %RESULT%;"}))}getTexture(e,t){return`texture2D( ${e}, ${t} )`}getTextureBias(e,t,o){return void 0!==this.material.extensions&&(this.material.extensions.shaderTextureLOD=!0),`textureLod( ${e}, ${t}, ${o} )`}getCubeTexture(e,t){return`textureCube( ${e}, ${t} )`}getCubeTextureBias(e,t,o){return void 0!==this.material.extensions&&(this.material.extensions.shaderTextureLOD=!0),`textureLod( ${e}, ${t}, ${o} )`}getUniforms(e){const t=this.uniforms[e];let o="";for(const e of t)if("texture"===e.type)o+=`uniform sampler2D ${e.name}; `;else if("cubeTexture"===e.type)o+=`uniform samplerCube ${e.name}; `;else{o+=`uniform ${this.getVectorType(e.type)} ${e.name}; `}return o}getAttributes(e){let t="";if("vertex"===e){const e=this.attributes;for(const o of e)"uv"!==o.name&&"position"!==o.name&&"normal"!==o.name&&(t+=`attribute ${o.type} ${o.name}; `)}return t}getVaryings(e){let t="";const o=this.varyings;if("vertex"===e)for(const e of o)t+=`${e.needsInterpolation?"varying":"/*varying*/"} ${e.type} ${e.name}; `;else if("fragment"===e)for(const e of o)e.needsInterpolation&&(t+=`varying ${e.type} ${e.name}; `);return t}addCode(e,t,o,n=this){const s=u(e);let r=n[s];const a=r.indexOf(t);if(-1!==a){const e=r.substring(0,a+t.length),n=r.substring(a+t.length);r=`${e}\n${o}\n${n}`}n[s]=r}replaceCode(e,t,o,n=this){const s=u(e);n[s]=n[s].replaceAll(t,o)}getTextureEncodingFromMap(e){return this.renderer.capabilities.isWebGL2&&e&&e.isTexture&&e.format===a.RGBAFormat&&e.type===a.UnsignedByteType&&e.encoding===a.sRGBEncoding?a.LinearEncoding:super.getTextureEncodingFromMap(e)}getFrontFacing(){return"gl_FrontFacing"}buildCode(){const e={};for(const t of n.defaultShaderStages){const o=this.getUniforms(t),n=this.getAttributes(t),s=this.getVaryings(t),r=this.getVars(t),a=this.getCodes(t);e[t]=`${this.getSignature()}\n// <node_builder>\n\n// uniforms\n${o}\n\n// attributes\n${n}\n\n// varyings\n${s}\n\n// vars\n${r}\n\n// codes\n${a}\n\n// </node_builder>\n\n${this.shader[u(t)]}\n`}this.vertexShader=e.vertex,this.fragmentShader=e.fragment}build(){return super.build(),this._addSnippets(),this._addUniforms(),this._updateUniforms(),this.shader.vertexShader=this.vertexShader,this.shader.fragmentShader=this.fragmentShader,this}_parseInclude(e,...t){for(const o of t){const t=c(o),n=a.ShaderChunk[o],s=u(e);this.shader[s]=this.shader[s].replaceAll(t,n)}}_sortSlotsToFlow(){for(const e of n.defaultShaderStages){const t=this.shader[u(e)],o=this.slots[e].sort(((e,o)=>t.indexOf(e.source)>t.indexOf(o.source)?1:-1));for(const t of o)this.addFlow(e,t)}}_addSnippets(){for(const e of n.defaultShaderStages){for(const t of this.slots[e]){const o=this.getFlowData(t),n=t.inclusionType,s=t.source,r=o.code+"\n\t"+t.target.replace("%RESULT%",o.result);"append"===n?this.addCode(e,s,r):"replace"===n?this.replaceCode(e,s,r):console.warn(`Inclusion type "${n}" not compatible.`)}this.addCode(e,"main() {","\n\t"+this.flowCode[e])}}_addUniforms(){for(const e of n.defaultShaderStages)for(const t of this.uniforms[e])this.shader.uniforms[t.name]=t}_updateUniforms(){i.object=this.object,i.renderer=this.renderer;for(const e of this.updateNodes)i.updateNode(e)}}})),s.register("1fGiM",(function(t,o){e(t.exports,"default",(()=>a));var n=s("e6hrk");class r extends n.Node{constructor(e){super(e.nodeType),this.node=null,this.source=null,this.target=null,this.inclusionType="replace",Object.assign(this,e)}generate(e){return this.node.build(e,this.getNodeType(e))}}var a=r})),s.register("hWrQ2",(function(t,o){e(t.exports,"parseCode",(()=>u));var n=s("apQQe");const r=[{filter:new RegExp("^andarFrente(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^andarTras(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^coletarCristal(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"normal"},{filter:new RegExp("^apagarFogoECobrirBuraco(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^cobrirBuraco(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),type:"conditional"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"conditional&&blockValidation"},{filter:new RegExp("^}$"),type:"closeBlockValidation"},{filter:new RegExp("^{$"),type:"blockValidation"}],a=[new RegExp("true"),new RegExp("false"),new RegExp("^pegandoFogo(\\s+)?\\((\\s+)?\\)(\\s+)?$")];function i(e){let t=e.trim(),o=e.substring(t.indexOf("(")+1,t.lastIndexOf(")"));for(let e=0;e<a.length;e++)if(a[e].test(o.trim()))return!0;return!1}function d(e,t){let o=!1,n=0;for(let s=t+1;s<e.length;s++)if(e[s].includes("}")){if(0==n){o=!0;break}n--}else{if(!e[s].includes("{"))continue;n++}return o}function l(e,t){let o=!1;for(let n=t-1;n>=0;n--)if(e[n].includes("{")){o=!0;break}return o}function c(e,t){let o=!1,n=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?.+(\\s+)?$"),s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^]*?$"),a=null;for(let o=t-1;o>=0;o--)if(s.test(e[o].trim())||blockIf.test(e[o].trim())){a=o;break}if(null!=a){let s="";for(let o=a;o<t;o++)s+=`${e[o].trim()}`;return n.test(s.trim())||r.test(s.trim())?(o=!0,o):o}return o}function u(e,t=0){let o="async function runCode(){\n",s=e.split("\n"),a=!0,u=0;for(let e=0;e<s.length;e++){let f,h=!1;if(""!=s[e].trim()){for(let t=0;t<r.length;t++)if(h=r[t].filter.test(s[e].trim()),h){f=r[t].type;break}if(!h){(0,n.printErrorOnConsole)(s[e],e+1),a=!1;break}if("sequential"===f){o+=`await ${s[e].trim()}\n`,u++}else if("conditional&&blockValidation"===f){let t=!1;if(d(s,e)?i(s[e])?t=!0:(0,n.printErrorOnConsole)(`${s[e]} (Condição inválida)`,e+1):(0,n.printErrorOnConsole)(`${s[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!t){a=!1;break}{let t=s[e].trim();o+=`if${t.substring(t.indexOf("("))}\n`,u++}}else if("conditional"===f){if(!i(s[e])){(0,n.printErrorOnConsole)(`${s[e]} (Condição inválida)`,e+1),a=!1;break}{let t=s[e].trim();o+=`if${t.substring(t.indexOf("("))}\n`,u++}}else if("blockValidation"===f){if(!d(s,e)){(0,n.printErrorOnConsole)(`${s[e]} (Bloco é aberto mas nunca é fechado)`,e+1),a=!1;break}o+=`${s[e].trim()}\n`,u++}else if("closeBlockValidation"===f){if(!l(s,e)){(0,n.printErrorOnConsole)(`${s[e]} (Bloco é fechado mas nunca é aberto)`,e+1),a=!1;break}o+=`${s[e].trim()}\n`,u++}else if("mustCondition"===f){if(!c(s,e)){(0,n.printErrorOnConsole)(`${s[e]} (Não é possível usar comando sem saber o que está em minha frente)`,e+1),a=!1;break}o+=`${s[e].trim()}\n`,u++}else{o+=`${s[e].trim()}\n`,u++}if(t>0&&u>t){(0,n.printOnConsole)(`O código tem mais linhas do que o robô pode processar. Tente rescrever seu código em ${t} linhas ou menos.`),a=!1;break}}}return a?(o+="}\nrunCode()",o):null}}));