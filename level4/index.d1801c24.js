function $parcel$export(e,t,o,r){Object.defineProperty(e,t,{get:o,set:r,enumerable:!0,configurable:!0})}var $parcel$global="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},$parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequiredf3e;null==parcelRequire&&(parcelRequire=function(e){if(e in $parcel$modules)return $parcel$modules[e].exports;if(e in $parcel$inits){var t=$parcel$inits[e];delete $parcel$inits[e];var o={id:e,exports:{}};return $parcel$modules[e]=o,t.call(o.exports,o,o.exports),o.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r},parcelRequire.register=function(e,t){$parcel$inits[e]=t},$parcel$global.parcelRequiredf3e=parcelRequire),parcelRequire.register("b0KIW",(function(module,exports){var $4xklQ=parcelRequire("4xklQ"),$bsNDL=parcelRequire("bsNDL"),$7FzN9=parcelRequire("7FzN9"),$1M2iF=parcelRequire("1M2iF"),$fzqfQ=parcelRequire("fzqfQ"),$i5CJu=parcelRequire("i5CJu"),$7k7o1=parcelRequire("7k7o1"),$j0YSa=parcelRequire("j0YSa"),$dhcg3=parcelRequire("dhcg3");parcelRequire("iO2wr");var $4Bhaq=parcelRequire("4Bhaq"),$hfAuX=parcelRequire("hfAuX"),$8TDdX=parcelRequire("8TDdX"),$7TtGC=parcelRequire("7TtGC");const sceneProperties={cancelExecution:!1,timer:0,phase:0,executing:!1,mult:1,lang:window.location.href.includes("english")?1:0};function generatePhaseTitle(){return 1===sceneProperties.lang?`Level 4 - Round ${sceneProperties.phase+1} of 8`:`Nível 4 - Fase ${sceneProperties.phase+1} de 8`}const textVariations=[[generatePhaseTitle,"Faça o robô chegar ao cristal, após isso, o colete.","Faça o robô chegar aos cristais, após isso, os colete.","Robô não está em frente ao cristal.\n","Cristal coletado.\n","Cristal coletado com sucesso.\n","Todos os cristais coletados com sucesso!\n","Nível Concluído","Finalizar","Deseja realmente finalizar a prática?","O robô entrou em curto circuito por tentar desativar um laser azul que não existe.\n","O robô entrou em curto circuito por tentar desativar um laser vermelho que não existe.\n","Abra a porta, faça o robô chegar ao cristal, após isso, o colete.","É preciso estar de frente de uma manivela para usar este comando.\n"],[generatePhaseTitle,"Make the robot reach the crystal and collect it.","Make the robot reach the crystals and collect them.","Robot is not in front of the crystal.\n","Crystal collected.\n","Crystal successfully collected.\n","All crystals collected successfully!\n","Level Completed","Finish","Do you really want to finish the practice?","The robot short-circuited after trying to deactivate a blue laser that doesn't exist.\n","The robot short-circuited after trying to deactivate a red laser that doesn't exist.\n","Open the door, make the robot reach the crystal and collect it.","You must be in front of a crank to use this command.\n"]],commandsVariations=[["andarFrente(?)\n","andarTras(?)\n","girarEsquerda()\n","girarDireita()\n","darMeiaVolta()\n","coletarCristal()\n","desativarLaserAzul()\n","desativarLaserVermelho()\n","laserAzulAtivo()","laserVermelhoAtivo()","se(?){\n\n}\nsenão{\n\n}\n","girarManivela()\n","portaFechada()","enquanto(?){\n\n}\n","se(?){\n\n}\n"],["moveForward(?)\n","moveBackwards(?)\n","rotateLeft()\n","rotateRight()\n","turnBack()","collectCrystal()\n","disableBlueLaser()\n","disableRedLaser()\n","isBlueLaserActive()","isRedLaserActive()","if(?){\n\n}\nelse{\n\n}\n","turnCrank()\n","isDoorClosed()","while(?){\n\n}\n","if(?){\n\n}\n"]],logModal=new(0,$8TDdX.Modal)(document.getElementById("logModal"));let timerUpadate,laserState,setLaserStates,setLaserStatesInterval,spikeTrapState,setSpikeTrapState,setSpikeTrapStateInterval;function updateTime(){sceneProperties.timer++}const editor=(0,$bsNDL.generateDefaultEditor)(document.getElementById("editorArea")),andarFrenteBtn=document.getElementById("andarFrente");andarFrenteBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][0]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][0]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const andarTrasBtn=document.getElementById("andarTras");andarTrasBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][1]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][1]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const girarEsquerdaBtn=document.getElementById("girarEsquerda");girarEsquerdaBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][2]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][2]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const girarDireitaBtn=document.getElementById("girarDireita");girarDireitaBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][3]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][3]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const darMeiaVoltaBtn=document.getElementById("darMeiaVolta");darMeiaVoltaBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][4]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][4]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const desativarLaserAzulBtn=document.getElementById("desativarLaserAzul");desativarLaserAzulBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][6]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][6]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const desativarLaserVermelhoBtn=document.getElementById("desativarLaserVermelho");desativarLaserVermelhoBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][7]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][7]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const girarManivelaBtn=document.getElementById("girarManivela");girarManivelaBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][11]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][11]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const coletarCristalBtn=document.getElementById("coletarCristal");coletarCristalBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][5]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][5]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const laserAzulAtivoBtn=document.getElementById("laserAzulAtivo");laserAzulAtivoBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][8]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][8]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const laserVermelhoAtivoBtn=document.getElementById("laserVermelhoAtivo");laserVermelhoAtivoBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][9]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][9]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const portaFechadaBtn=document.getElementById("portaFechada");portaFechadaBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][12]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][12]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const condicaoBtn=document.getElementById("condicao");condicaoBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][14]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][14]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const condicaoFullBtn=document.getElementById("condicaoFull");condicaoFullBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][10]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][10]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const enquantoBtn=document.getElementById("enquanto");enquantoBtn.addEventListener("click",(()=>{let e,t,o=editor.state.selection.main.anchor,r=editor.state.selection.main.head;o<=r?(e=editor.state.update({changes:{from:o,to:r,insert:commandsVariations[sceneProperties.lang][13]}}),t=editor.state.doc.lineAt(o).number):(e=editor.state.update({changes:{from:r,to:o,insert:commandsVariations[sceneProperties.lang][13]}}),t=editor.state.doc.lineAt(r).number),editor.dispatch(e),editor.focus();let a=editor.state.doc.line(t+1).to;editor.dispatch({selection:{anchor:a}})}));const consoleElement=document.getElementById("consoleArea"),{renderer:renderer,scene:scene,camera:camera,controls:controls}=(0,$7FzN9.generateDefaultSceneObjects)(document.getElementById("phaseView")),gridMapHelper=new(0,$1M2iF.default),plane=gridMapHelper.createGridPlane(),actor=(0,$7FzN9.loadDefaultActor)(),wallTexture=(new $4xklQ.TextureLoader).load(new URL(parcelRequire("b4qUs")).toString());let objectives,walls,openDoors,crancks,cranckBases,cranckInteractionReferences,doors,traps,laserFences,girarManivela,portaFechada,coletarCristal,resetLevel,winCondition;function changeLaserActiveStatus(e,t){gridMapHelper.lasers[e].active=t,0==t?laserFences[e].setNotVisible():"red"==gridMapHelper.lasers[e].state?(laserFences[e].setVisible(),laserFences[e].setRed()):(laserFences[e].setVisible(),laserFences[e].setBlue())}function changeLaserStateStatus(e,t){gridMapHelper.lasers.forEach((e=>{"multiColor"==e.type&&(e.state=t)})),"blue"==t?laserFences.forEach((e=>{"multiColor"==e.type&&e.setBlue()})):"red"==t&&laserFences.forEach((e=>{"multiColor"==e.type&&e.setRed()}))}function lasersVisualRestart(){for(let e=0;e<laserFences.length;e++)laserFences[e].active=!0}function laserAzulAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"blue")}function laserVermelhoAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"red")}function desativarLaserAzul(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let t=gridMapHelper.detectLaser(e,"blue");null!=t?changeLaserActiveStatus(t,!1):(consoleElement.innerText+=textVariations[sceneProperties.lang][10],sceneProperties.cancelExecution=!0)}function desativarLaserVermelho(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let t=gridMapHelper.detectLaser(e,"red");null!=t?changeLaserActiveStatus(t,!1):(consoleElement.innerText+=textVariations[sceneProperties.lang][11],sceneProperties.cancelExecution=!0)}function badLuck(e,t){const o=new $4xklQ.Vector3(gridMapHelper.getGlobalXPositionFromCoord(e[0]),0,gridMapHelper.getGlobalZPositionFromCoord(e[1]));let r="blue"==t?"red":"blue",a=gridMapHelper.detectLaser(o,t);null!=a&&("multiColor"==gridMapHelper.lasers[a].type?(gridMapHelper.lasers[a].state=r,"blue"==r?laserFences[a].setBlue():laserFences[a].setRed()):gridMapHelper.lasers[a].active?(gridMapHelper.lasers[a].active=!1,laserFences[a].setNotVisible()):(gridMapHelper.lasers[a].active=!0,laserFences[a].setVisible(),"blue"==gridMapHelper.lasers[a].state?laserFences[a].setBlue():laserFences[a].setRed()))}async function andarFrente(e){let t=e>10?10:e;await(0,$7FzN9.translateActor)(actor,t,gridMapHelper,sceneProperties,consoleElement)}async function andarTras(e){let t=e>10?10:e;await(0,$7FzN9.translateActor)(actor,-t,gridMapHelper,sceneProperties,consoleElement)}async function girarEsquerda(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,1)}async function girarDireita(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,-1)}async function darMeiaVolta(){await(0,$7FzN9.rotateActor)(actor,180,sceneProperties,1)}wallTexture.wrapS=$4xklQ.RepeatWrapping,wallTexture.wrapT=$4xklQ.RepeatWrapping,scene.add(plane),scene.add(actor);const phaseGeneration=[];function removeObjects(e,t,o,r,a,s,i,l){if(null!=e)for(let t=0;t<e.length;t++)scene.remove(e[t]);if(null!=t){for(let e=0;e<t.length;e++)scene.remove(t[e]);gridMapHelper.clearObstacles()}if(null!=o){for(let e=0;e<o.length;e++)scene.remove(o[e]);gridMapHelper.clearTraps()}if(null!=r){for(let e=0;e<r.length;e++)scene.remove(r[e]);gridMapHelper.clearLasers()}if(null!=a){for(let e=0;e<a.length;e++)scene.remove(a[e]);gridMapHelper.clearDoors()}if(null!=s){for(let e=0;e<s.length;e++)scene.remove(s[e]);gridMapHelper.clearDoors()}if(null!=i){for(let e=0;e<i.length;e++)scene.remove(i[e]);gridMapHelper.clearDoors()}if(null!=l){for(let e=0;e<l.length;e++)scene.remove(l[e]);gridMapHelper.clearDoors()}e=void 0,t=void 0,o=void 0,r=void 0,a=void 0,s=void 0,i=void 0,l=void 0}function animate(){renderer.render(scene,camera),controls.update(),requestAnimationFrame(animate),(0,$hfAuX.displayTime)(sceneProperties.timer,document.getElementById("timer"))}phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(1),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(9,9,5,5),scene.add(objectives[0]),openDoors=[],doors=[],cranckBases=[],crancks=[],cranckInteractionReferences=[],cranckBases.push(new(0,$7k7o1.default)),crancks.push(new(0,$i5CJu.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(5)),crancks[0].correctPos("right",cranckInteractionReferences[0],cranckBases[0]),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(5,5,5,5),scene.add(crancks[0]),scene.add(cranckBases[0]),scene.add(doors[0]),openDoors.push(!1),walls=[];const e=new $4xklQ.BoxGeometry(18,2,2),t=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];t[2].map.repeat.set(9,1),t[3].map.repeat.set(9,1),t[4].map.repeat.set(9,1),t[5].map.repeat.set(9,1),walls.push(new $4xklQ.Mesh(e,t)),walls.push(new $4xklQ.Mesh(e,t)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),scene.add(walls[0]),scene.add(walls[1]),gridMapHelper.addObstacle(1,9,4,4),gridMapHelper.addObstacle(1,9,6,6),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[1].active=!1,e()):requestAnimationFrame((function(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}))}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3])},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles[0].active=!0,gridMapHelper.obstacles[1].active=!0},winCondition=()=>!objectives[0].visible,timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(0,0,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(crancks[0]),scene.add(crancks[1]),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[0].rotateY(-Math.PI/2),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),doors[1].rotateY(Math.PI/2),gridMapHelper.addObstacle(5,5,7,7),gridMapHelper.addObstacle(5,5,3,3),scene.add(doors[0]),scene.add(doors[1]),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addLaser(7,9,laserFences[0]),gridMapHelper.addLaser(7,0,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,7,traps[0]),gridMapHelper.addTrap(0,2,traps[1]),scene.add(traps[0]),scene.add(traps[1]),walls=[];const e=new $4xklQ.BoxGeometry(6,2,2),t=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(8,2,2),r=new $4xklQ.BoxGeometry(4,2,2),a=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];a[2].map.repeat.set(3,1),a[3].map.repeat.set(3,1),a[4].map.repeat.set(3,1),a[5].map.repeat.set(3,1);const s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(4,1),i[3].map.repeat.set(4,1),i[4].map.repeat.set(4,1),i[5].map.repeat.set(4,1);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(2,1),l[3].map.repeat.set(2,1),l[4].map.repeat.set(2,1),l[5].map.repeat.set(2,1),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(t,s)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[3].rotateY(Math.PI/2),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[4].rotateY(Math.PI/2),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[6].rotateY(Math.PI/2),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(3.5)),walls[8].rotateY(Math.PI/2),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[9].rotateY(Math.PI/2),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(3.5)),walls[10].rotateY(Math.PI/2),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(2)),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),gridMapHelper.addObstacle(2,4,6,6),gridMapHelper.addObstacle(1,3,7,7),gridMapHelper.addObstacle(3,3,8,8),gridMapHelper.addObstacle(6,6,6,6),gridMapHelper.addObstacle(7,7,6,8),gridMapHelper.addObstacle(8,8,7,7),gridMapHelper.addObstacle(3,3,1,4),gridMapHelper.addObstacle(1,2,2,2),gridMapHelper.addObstacle(4,4,4,4),gridMapHelper.addObstacle(7,7,1,4),gridMapHelper.addObstacle(6,6,4,4),gridMapHelper.addObstacle(8,8,2,2);(new $4xklQ.Object3D).position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserActiveStatus(0,!0),changeLaserActiveStatus(1,!1)):(changeLaserActiveStatus(0,!1),changeLaserActiveStatus(1,!0))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(9,9,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(2)),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("up",cranckInteractionReferences[2],cranckBases[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(1,1,9,9),gridMapHelper.addObstacle(8,8,7,7),gridMapHelper.addObstacle(9,9,1,1),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),gridMapHelper.addLaser(5,5,laserFences[0]),gridMapHelper.addLaser(9,6,laserFences[1]),laserFences[1].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(1)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(8)),gridMapHelper.addTrap(0,1,traps[0]),gridMapHelper.addTrap(3,5,traps[1]),gridMapHelper.addTrap(9,8,traps[2]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),o=new $4xklQ.BoxGeometry(6,2,2),r=new $4xklQ.BoxGeometry(8,2,2),a=(new $4xklQ.BoxGeometry(10,2,2),new $4xklQ.BoxGeometry(12,2,2)),s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(2,1),i[3].map.repeat.set(2,1),i[4].map.repeat.set(2,1),i[5].map.repeat.set(2,1);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(3,1),l[3].map.repeat.set(3,1),l[4].map.repeat.set(3,1),l[5].map.repeat.set(3,1);const n=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];n[2].map.repeat.set(4,1),n[3].map.repeat.set(4,1),n[4].map.repeat.set(4,1),n[5].map.repeat.set(4,1);const c=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];c[2].map.repeat.set(6,1),c[3].map.repeat.set(6,1),c[4].map.repeat.set(6,1),c[5].map.repeat.set(6,1),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(a,c)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(t,i)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[7].rotateY(Math.PI/2),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[10].rotateY(Math.PI/2),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[11].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),gridMapHelper.addObstacle(1,1,6,8),gridMapHelper.addObstacle(1,1,1,4),gridMapHelper.addObstacle(2,3,6,6),gridMapHelper.addObstacle(2,3,4,4),gridMapHelper.addObstacle(3,8,8,8),gridMapHelper.addObstacle(5,8,6,6),gridMapHelper.addObstacle(5,8,4,4),gridMapHelper.addObstacle(5,5,2,3),gridMapHelper.addObstacle(3,3,1,1),gridMapHelper.addObstacle(7,7,0,2),gridMapHelper.addObstacle(8,8,1,2),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(6,6,9,9),gridMapHelper.addObstacle(9,9,9,9),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(0)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("up",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[0].rotateY(Math.PI/2),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,7,7),gridMapHelper.addObstacle(2,2,1,1),gridMapHelper.addObstacle(6,6,8,8),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(0)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addLaser(1,0,laserFences[0]),gridMapHelper.addLaser(3,2,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(9)),traps[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),traps[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(3)),gridMapHelper.addTrap(1,6,traps[0]),gridMapHelper.addTrap(1,5,traps[1]),gridMapHelper.addTrap(1,4,traps[2]),gridMapHelper.addTrap(1,3,traps[3]),gridMapHelper.addTrap(3,4,traps[4]),gridMapHelper.addTrap(5,9,traps[5]),gridMapHelper.addTrap(5,4,traps[6]),gridMapHelper.addTrap(7,9,traps[7]),gridMapHelper.addTrap(7,6,traps[8]),gridMapHelper.addTrap(7,4,traps[9]),gridMapHelper.addTrap(9,3,traps[10]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),scene.add(traps[5]),scene.add(traps[6]),scene.add(traps[7]),scene.add(traps[8]),scene.add(traps[9]),scene.add(traps[10]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(2,2,4),o=new $4xklQ.BoxGeometry(2,2,6),r=new $4xklQ.BoxGeometry(8,2,2),a=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[0].map.repeat.set(2,1),s[1].map.repeat.set(2,1),s[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),s[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[0].map.repeat.set(3,1),i[1].map.repeat.set(3,1),i[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),i[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(4,1),l[3].map.repeat.set(4,1),l[4].map.repeat.set(4,1),l[5].map.repeat.set(4,1),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(e,a)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(.5)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1)),gridMapHelper.addObstacle(1,1,7,8),gridMapHelper.addObstacle(1,1,1,2),gridMapHelper.addObstacle(3,3,7,8),gridMapHelper.addObstacle(3,3,5,5),gridMapHelper.addObstacle(3,3,3,3),gridMapHelper.addObstacle(3,3,0,1),gridMapHelper.addObstacle(4,4,7,7),gridMapHelper.addObstacle(5,5,7,8),gridMapHelper.addObstacle(5,8,5,5),gridMapHelper.addObstacle(5,5,1,3),gridMapHelper.addObstacle(7,7,7,8),gridMapHelper.addObstacle(7,7,1,3),gridMapHelper.addObstacle(8,8,1,1),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(3),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(7)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(3)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(2,2,7,7),gridMapHelper.addObstacle(2,2,3,3),gridMapHelper.addObstacle(8,8,5,5),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("right",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[0].rotateY(Math.PI/2),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,8,8),gridMapHelper.addObstacle(2,2,2,2),gridMapHelper.addObstacle(9,9,8,8),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[0].rotateY(Math.PI/2),gridMapHelper.addLaser(0,2,laserFences[0]),scene.add(laserFences[0]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(3)),gridMapHelper.addTrap(1,7,traps[0]),gridMapHelper.addTrap(1,3,traps[1]),gridMapHelper.addTrap(3,7,traps[2]),gridMapHelper.addTrap(3,5,traps[3]),gridMapHelper.addTrap(3,3,traps[4]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),o=new $4xklQ.BoxGeometry(6,2,6),r=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),a=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];a[2].map.repeat.set(2,1),a[3].map.repeat.set(2,1),a[4].map.repeat.set(2,1),a[5].map.repeat.set(2,1);const s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[0].map.repeat.set(3,1),s[1].map.repeat.set(3,1),s[2].map.repeat.set(3,3),s[3].map.repeat.set(3,3),s[4].map.repeat.set(3,1),s[5].map.repeat.set(3,1),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[16].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[17].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(4)),gridMapHelper.addObstacle(1,1,8,8),gridMapHelper.addObstacle(1,2,6,6),gridMapHelper.addObstacle(1,2,4,4),gridMapHelper.addObstacle(1,1,2,2),gridMapHelper.addObstacle(1,2,0,0),gridMapHelper.addObstacle(3,4,8,8),gridMapHelper.addObstacle(3,4,6,6),gridMapHelper.addObstacle(3,4,4,4),gridMapHelper.addObstacle(3,4,2,2),gridMapHelper.addObstacle(3,3,0,0),gridMapHelper.addObstacle(5,7,6,8),gridMapHelper.addObstacle(5,7,2,4),gridMapHelper.addObstacle(5,5,1,1),gridMapHelper.addObstacle(7,8,1,1),gridMapHelper.addObstacle(8,8,8,8),gridMapHelper.addObstacle(8,8,2,2),gridMapHelper.addObstacle(9,9,6,6),gridMapHelper.addObstacle(9,9,4,4),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),scene.add(walls[16]),scene.add(walls[17]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[2].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||objectives[2].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,objectives[2].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible),laserState=0,setLaserStates=()=>{changeLaserStateStatus(0,0==laserState?"blue":"red")},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(0,0,0,0),gridMapHelper.addObstacle(7,7,9,9),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(crancks[0]),scene.add(crancks[1]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(1,1,8,8),gridMapHelper.addObstacle(8,8,0,0),scene.add(doors[0]),scene.add(doors[1]),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[0].rotateY(Math.PI/2),laserFences[1].rotateY(Math.PI/2),gridMapHelper.addLaser(4,6,laserFences[0]),gridMapHelper.addLaser(9,6,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,2,traps[0]),gridMapHelper.addTrap(3,5,traps[1]),gridMapHelper.addTrap(3,3,traps[2]),gridMapHelper.addTrap(7,2,traps[3]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),o=new $4xklQ.BoxGeometry(2,2,6),r=new $4xklQ.BoxGeometry(2,2,4),a=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[2].map.repeat.set(2,1),s[3].map.repeat.set(2,1),s[4].map.repeat.set(2,1),s[5].map.repeat.set(2,1);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[0].map.repeat.set(3,1),i[1].map.repeat.set(3,1),i[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),i[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[0].map.repeat.set(2,1),l[1].map.repeat.set(2,1),l[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),l[3].map.rotation=(0,$7FzN9.degreeToRadians)(90),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(o,i)),walls.push(new $4xklQ.Mesh(r,l)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(r,l)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),gridMapHelper.addObstacle(1,1,9,9),gridMapHelper.addObstacle(1,2,7,7),gridMapHelper.addObstacle(1,2,2,2),gridMapHelper.addObstacle(3,3,6,8),gridMapHelper.addObstacle(3,4,4,4),gridMapHelper.addObstacle(3,3,1,2),gridMapHelper.addObstacle(5,6,6,6),gridMapHelper.addObstacle(5,6,2,2),gridMapHelper.addObstacle(6,6,7,9),gridMapHelper.addObstacle(6,6,3,5),gridMapHelper.addObstacle(8,8,6,7),gridMapHelper.addObstacle(8,8,4,4),gridMapHelper.addObstacle(8,8,1,2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(4),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(8)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(1)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(0,0,8,8),gridMapHelper.addObstacle(0,0,1,1),gridMapHelper.addObstacle(7,7,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),scene.add(objectives[3]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(9)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,2,traps[0]),gridMapHelper.addTrap(1,9,traps[1]),scene.add(traps[0]),scene.add(traps[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(6)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[0].correctPos("left",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),scene.add(crancks[3]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[0].rotateY(Math.PI/2),gridMapHelper.addObstacle(0,0,7,7),gridMapHelper.addObstacle(1,1,1,1),scene.add(doors[0]),scene.add(doors[1]),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[0].rotateY(Math.PI/2),gridMapHelper.addLaser(6,6,laserFences[0]),scene.add(laserFences[0]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),o=new $4xklQ.BoxGeometry(6,2,2),r=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),a=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];a[2].map.repeat.set(2,1),a[3].map.repeat.set(2,1),a[4].map.repeat.set(2,1),a[5].map.repeat.set(2,1);const s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[2].map.repeat.set(3,1),s[3].map.repeat.set(3,1),s[4].map.repeat.set(3,1),s[5].map.repeat.set(3,1),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(t,a)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,a)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8.5)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[2].rotateY(Math.PI/2),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[6].rotateY(Math.PI/2),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].rotateY(Math.PI/2),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[16].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(1,1,7,8),gridMapHelper.addObstacle(3,3,8,9),gridMapHelper.addObstacle(1,1,2,4),gridMapHelper.addObstacle(2,3,4,4),gridMapHelper.addObstacle(2,2,2,2),gridMapHelper.addObstacle(4,4,6,6),gridMapHelper.addObstacle(5,5,6,8),gridMapHelper.addObstacle(1,3,0,0),gridMapHelper.addObstacle(4,4,2,2),gridMapHelper.addObstacle(5,5,1,3),gridMapHelper.addObstacle(8,8,9,9),gridMapHelper.addObstacle(7,9,8,8),gridMapHelper.addObstacle(7,8,6,6),gridMapHelper.addObstacle(7,8,4,4),gridMapHelper.addObstacle(8,8,3,3),gridMapHelper.addObstacle(8,8,1,1),gridMapHelper.addObstacle(7,8,0,0),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),scene.add(walls[16]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[3],gridMapHelper)?!openDoors[3]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[4],gridMapHelper)?!openDoors[4]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[6].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[3],gridMapHelper)){function t(){doors[3].lerpDoor(0,-2),doors[3].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[3].getDoorY().toFixed(1)?(openDoors[3]=!0,gridMapHelper.obstacles[7].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[2].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[3],gridMapHelper)?(objectives[3].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[3].active=!1):(consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6])))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible),laserState=0,setLaserStates=()=>{changeLaserStateStatus(0,0==laserState?"blue":"red")},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText=textVariations[sceneProperties.lang][0](),document.getElementById("phaseObjective").innerText=textVariations[sceneProperties.lang][12],sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(4),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(6)),objectives[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(0,0,1,1),gridMapHelper.addObstacle(9,9,0,0),gridMapHelper.addObstacle(5,5,6,6),gridMapHelper.addObstacle(9,9,9,9),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),scene.add(objectives[3]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(0)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(7)),gridMapHelper.addTrap(2,3,traps[0]),gridMapHelper.addTrap(2,0,traps[1]),gridMapHelper.addTrap(5,7,traps[2]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("right",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(9)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,9,9),gridMapHelper.addObstacle(1,1,1,1),gridMapHelper.addObstacle(5,5,5,5),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(5)),laserFences[1].rotateY(Math.PI/2),laserFences[2].rotateY(Math.PI/2),gridMapHelper.addLaser(4,9,laserFences[0]),gridMapHelper.addLaser(5,2,laserFences[1]),gridMapHelper.addLaser(9,5,laserFences[2]),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(4,2,2),o=new $4xklQ.BoxGeometry(6,2,2),r=new $4xklQ.BoxGeometry(8,2,2),a=new $4xklQ.BoxGeometry(10,2,2),s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(2,1),i[3].map.repeat.set(2,1),i[4].map.repeat.set(2,1),i[5].map.repeat.set(2,1);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(3,1),l[3].map.repeat.set(3,1),l[4].map.repeat.set(3,1),l[5].map.repeat.set(3,1);const n=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];n[2].map.repeat.set(4,1),n[3].map.repeat.set(4,1),n[4].map.repeat.set(4,1),n[5].map.repeat.set(4,1);const c=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];c[2].map.repeat.set(5,1),c[3].map.repeat.set(5,1),c[4].map.repeat.set(5,1),c[5].map.repeat.set(5,1),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(a,c)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(r,n)),walls.push(new $4xklQ.Mesh(t,i)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].rotateY(Math.PI/2),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[4].rotateY(Math.PI/2),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[6].rotateY(Math.PI/2),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(5.5)),walls[8].rotateY(Math.PI/2),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[11].rotateY(Math.PI/2),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),gridMapHelper.addObstacle(0,0,7,9),gridMapHelper.addObstacle(0,0,1,3),gridMapHelper.addObstacle(2,2,4,8),gridMapHelper.addObstacle(2,2,1,1),gridMapHelper.addObstacle(3,3,3,3),gridMapHelper.addObstacle(4,4,5,8),gridMapHelper.addObstacle(4,4,1,3),gridMapHelper.addObstacle(8,8,9,9),gridMapHelper.addObstacle(6,9,7,7),gridMapHelper.addObstacle(6,6,5,6),gridMapHelper.addObstacle(8,8,5,5),gridMapHelper.addObstacle(6,6,0,3),gridMapHelper.addObstacle(7,8,3,3),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+=textVariations[sceneProperties.lang][13],!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function t(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function t(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(t)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function t(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[6].active=!1,e()):requestAnimationFrame(t)}else consoleElement.innerText+=textVariations[sceneProperties.lang][13],e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[2].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[3],gridMapHelper)?(objectives[3].visible=!1,consoleElement.innerText+=textVariations[sceneProperties.lang][5],gridMapHelper.obstacles[3].active=!1):consoleElement.innerText+=textVariations[sceneProperties.lang][3],objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible||(consoleElement.innerText+=textVariations[sceneProperties.lang][6]))},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(1,!0),changeLaserActiveStatus(2,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(1,!1),changeLaserActiveStatus(2,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),document.getElementById("winMessage").innerText=textVariations[sceneProperties.lang][7],document.getElementById("advanceBtn").innerText=textVariations[sceneProperties.lang][8],timerUpadate=setInterval(updateTime,1e3)})),window.addEventListener("resize",(()=>{(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera)}));const finishEarlierButton=document.getElementById("finishEarlier"),execBtn=document.getElementById("execBtn");execBtn.addEventListener("click",(async function(){const codeParsed=(0,$4Bhaq.default)((0,$7TtGC.convertCode)(sceneProperties.lang,editor.state.doc.toString()));console.log(codeParsed),cancelAnimationFrame($7FzN9.corrID),cancelAnimationFrame($7FzN9.requestID),cancelAnimationFrame($7FzN9.changColorID),cancelAnimationFrame($7FzN9.smokeAnimationFrame),$7FzN9.smoke.deactiveSmokes(),sceneProperties.cancelExecution=!1,actor.getObjectByName("eve").position.y=0,null!=traps&&(0,$dhcg3.trapsDeactivation)(traps),null!=codeParsed&&((0,$bsNDL.updateTheme)(editor,1),resetLevel(),this.disabled=!0,sceneProperties.executing=!0,await eval(codeParsed),winCondition()?($bsNDL.readOnlyState.doc=editor.state.doc,editor.setState($bsNDL.readOnlyState),document.getElementById("winMessage").classList.remove("invisible"),document.getElementById("advanceBtn").classList.remove("invisible"),document.getElementById("resetBtn").disabled=!0,finishEarlierButton.disabled=!0,clearInterval(timerUpadate),sceneProperties.phase==phaseGeneration.length-1&&(0,$hfAuX.configureDataAndUpload)(document.getElementById("name"),document.getElementById("age"),"gender",document.getElementById("subBtn"),sceneProperties.timer,"../","Nível 4/Completo",document.getElementById("second-user"))):((0,$bsNDL.updateTheme)(editor,0),sceneProperties.executing=!1,this.disabled=!1))}));const resetBtn=document.getElementById("resetBtn");resetBtn.addEventListener("click",(()=>{cancelAnimationFrame($7FzN9.corrID),cancelAnimationFrame($7FzN9.requestID),cancelAnimationFrame($7FzN9.changColorID),cancelAnimationFrame($7FzN9.smokeAnimationFrame),$7FzN9.smoke.deactiveSmokes(),(0,$bsNDL.updateTheme)(editor,0),sceneProperties.cancelExecution=!0,actor.getObjectByName("eve").position.y=0,0!=$7FzN9.materialColor.length&&(0,$7FzN9.resetRobotColor)(actor),resetLevel()}));const advanceBtn=document.getElementById("advanceBtn");advanceBtn.addEventListener("click",(e=>{sceneProperties.phase++,sceneProperties.phase<phaseGeneration.length?(setLaserStatesInterval&&(clearInterval(setLaserStatesInterval),setLaserStatesInterval=void 0),removeObjects(objectives,walls,traps,laserFences,doors,crancks,cranckBases,cranckInteractionReferences),phaseGeneration[sceneProperties.phase](),editor.setState($bsNDL.editState),consoleElement.innerText=null,document.getElementById("winMessage").classList.add("invisible"),document.getElementById("advanceBtn").classList.add("invisible"),execBtn.disabled=!1,resetBtn.disabled=!1,finishEarlierButton.disabled=!1):(sceneProperties.phase=sceneProperties.phase>phaseGeneration.length?phaseGeneration.length:sceneProperties.phase,logModal.show())}));const reloadBtn=document.getElementById("reloadBtn");reloadBtn.addEventListener("click",(e=>{void 0!==setLaserStatesInterval&&(clearInterval(setLaserStatesInterval),setLaserStatesInterval=void 0),void 0!==setSpikeTrapStateInterval&&(clearInterval(setSpikeTrapStateInterval),setSpikeTrapStateInterval=void 0),void 0!==timerUpadate&&(clearInterval(timerUpadate),timerUpadate=void 0),cancelAnimationFrame($7FzN9.corrID),cancelAnimationFrame($7FzN9.requestID),cancelAnimationFrame($7FzN9.changColorID),cancelAnimationFrame($7FzN9.smokeAnimationFrame),sceneProperties.phase<phaseGeneration.length?(removeObjects(objectives,walls,traps,laserFences,doors,crancks,cranckBases,cranckInteractionReferences),phaseGeneration[sceneProperties.phase](),editor.setState($bsNDL.editState),consoleElement.innerText=null,execBtn.disabled=!1,resetBtn.disabled=!1,finishEarlierButton.disabled=!1,$7FzN9.smoke.deactiveSmokes(),(0,$bsNDL.updateTheme)(editor,0),sceneProperties.cancelExecution=!0,actor.getObjectByName("eve").position.y=0,resetLevel()):sceneProperties.phase=sceneProperties.phase>phaseGeneration.length?phaseGeneration.length:sceneProperties.phase})),finishEarlierButton.addEventListener("click",(e=>{confirm(textVariations[sceneProperties.lang][9])&&(clearInterval(timerUpadate),(0,$hfAuX.configureDataAndUpload)(document.getElementById("name"),document.getElementById("age"),"gender",document.getElementById("subBtn"),sceneProperties.timer,"../",`Nível 4/Fase ${sceneProperties.phase+1}`,document.getElementById("second-user")),logModal.show())}));let normalSpeedBtn=document.getElementById("normalSpeed"),fastSpeedBtn=document.getElementById("fastSpeed");normalSpeedBtn.addEventListener("click",(function(){this.disabled=!0,fastSpeedBtn.disabled=!1,sceneProperties.mult=1})),fastSpeedBtn.addEventListener("click",(function(){this.disabled=!0,normalSpeedBtn.disabled=!1,sceneProperties.mult=6})),(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera),phaseGeneration[sceneProperties.phase](),animate()})),parcelRequire.register("fzqfQ",(function(e,t){$parcel$export(e.exports,"default",(()=>m));var o=parcelRequire("4xklQ");parcelRequire("i5CJu");let r=new o.TextureLoader;function a(e,t=null,a=1,s=1){let i;return e||(e="rgb(255,255,255)"),t?(i=new o.MeshBasicMaterial({map:r.load(t),color:e}),i.map.wrapS=i.map.wrapT=o.RepeatWrapping,i.map.minFilter=i.map.magFilter=o.LinearFilter,i.map.repeat.set(a,s)):i=new o.MeshBasicMaterial({color:e}),i}const s=new URL(parcelRequire("bbyur")).toString();let i=[a("lightgray",s),a("lightgray",s),a("gray"),a("lightgray"),a("lightgray"),a("lightgray")];class l extends o.Mesh{constructor(e=.5,t=2,r=.15,a="white"){super(new o.BoxGeometry(e,t,r),new o.MeshPhongMaterial({color:a}))}}class n extends o.Mesh{constructor(){super(new o.TorusGeometry(.35,.05,10,20),new o.MeshPhongMaterial({color:"red"}))}}class c extends o.Mesh{constructor(e=.03,t=.03,r=.4,a=12,s=12,i="red"){super(new o.CylinderGeometry(e,t,r,a,s),new o.MeshPhongMaterial({color:i}))}}class p extends o.Mesh{constructor(e="white",t=.15,r=2,a=.1){super(new o.BoxGeometry(t,r,a),new o.MeshLambertMaterial({color:e}))}}class d extends o.Mesh{constructor(e){super(new o.BoxGeometry(.2,1.9,2),i)}}class g extends o.Object3D{constructor(e){super(),this.index=0,this.x=0,this.z=0,this.active=!0,this.cranck=e;let t=new p;t.rotateX(-Math.PI/2),t.position.set(.175,-.95,0);let o=new p;o.rotateX(-Math.PI/2),o.position.set(-.175,-.95,0);let r=new p("black",.2,2,.01);r.rotateX(-Math.PI/2),r.position.set(0,-.95,0);let a=new d;a.position.set(0,0,0),this.doorY=a.position.y,this.doors=[a];let s=new l(.5,2,.1);s.position.set(0,0,-.98);let i=new l(.5,2,.1);i.position.set(0,0,.98);let n=new l(.15,2,.1);n.position.set(.175,0,.92);let c=new l(.15,2,.1);c.position.set(-.175,0,.92);let g=new l(.15,2,.1);g.position.set(.175,0,-.92);let m=new l(.15,2,.1);return m.position.set(-.175,0,-.92),new l(.5,.5,.05,"lightgray").position.set(-2,0,-.995),this.crancks=[this.cranck],this.add(t),this.add(o),this.add(r),this.add(a),this.add(s),this.add(i),this.add(n),this.add(c),this.add(g),this.add(m),this}setVisible(){this.cranckDoors.forEach((e=>e.visible=!0)),this.active=!0}setNotVisible(){this.cranckDoors.forEach((e=>e.visible=!1)),this.active=!1}rotateCranckZ(e){this.crancks.forEach((t=>t.rotateZ(e)))}lerpDoor(e,t){this.doors.forEach((e=>e.position.lerp(new o.Vector3(e.position.x,t,e.position.z),.03)))}getDoorY(){return this.doors[0].position.y}resetPos(){this.doors.forEach((e=>e.position.y=0))}cranckPosition(e,t){this.cranck.position.x=e,this.cranck.position.z=t}}var m=g})),parcelRequire.register("i5CJu",(function(e,t){$parcel$export(e.exports,"default",(()=>l));var o=parcelRequire("4xklQ");class r extends o.Mesh{constructor(){super(new o.TorusGeometry(.35,.05,10,20),new o.MeshPhongMaterial({color:"red"}))}}class a extends o.Mesh{constructor(e=.03,t=.03,r=.4,a=12,s=12,i="red"){super(new o.CylinderGeometry(e,t,r,a,s),new o.MeshPhongMaterial({color:i}))}}class s extends o.Mesh{constructor(e=.5,t=2,r=.15,a="white"){super(new o.BoxGeometry(e,t,r),new o.MeshPhongMaterial({color:a}))}}class i extends o.Object3D{constructor(){super(),this.index=0,this.x=0,this.z=0,this.active=!0;let e=new r;e.position.set(0,0,0);let t=new a;t.position.set(0,.17,0);let o=new a;o.rotateZ(Math.PI/3.5),o.position.set(.15,-.12,0);let i=new a;i.rotateZ(Math.PI/-3.5),i.position.set(-.14,-.11,0);let l=new a(.08,.08,.06,12,12,"red");l.rotateX(Math.PI/2),l.position.set(0,0,0);let n=new a(.065,.065,.061,12,12,"lightgray");n.rotateX(Math.PI/2),n.position.set(0,0,0);let c=new a(.045,.045,.075,6,12,"gray");c.rotateX(Math.PI/2),c.position.set(0,0,0);let p=new a(.02,.035,.2,12,12,"gray");p.rotateX(Math.PI/2),p.position.set(0,0,-.1);let d=new a(.05,.05,.07,6,12,"gray");return d.rotateX(Math.PI/2),d.position.set(0,0,-.2),new s(.5,.5,.05,"lightgray").position.set(0,0,-.25),this.add(e),this.add(t),this.add(o),this.add(i),this.add(l),this.add(n),this.add(c),this.add(p),this.add(d),this}correctPos(e,t,o){"right"==e?(this.position.set(this.position.x,this.position.y,this.position.z-.72),t.position.set(this.position.x,this.position.y,this.position.z-2),o.position.set(this.position.x,this.position.y,this.position.z-.25)):"left"==e?(this.rotateY(Math.PI),this.position.set(this.position.x,this.position.y,this.position.z+.72),t.position.set(this.position.x,this.position.y,this.position.z+1),o.position.set(this.position.x,this.position.y,this.position.z+.25)):"down"==e?(this.rotateY(-Math.PI/2),this.position.set(this.position.x+.72,this.position.y,this.position.z),t.position.set(this.position.x+1,this.position.y,this.position.z),o.position.set(this.position.x+.25,this.position.y,this.position.z),o.rotateY(Math.PI/2)):"up"==e&&(this.rotateY(Math.PI/2),this.position.set(this.position.x-.72,this.position.y,this.position.z),t.position.set(this.position.x-2,this.position.y,this.position.z),o.position.set(this.position.x-.25,this.position.y,this.position.z),o.rotateY(Math.PI/2))}}var l=i})),parcelRequire.register("bbyur",(function(e,t){e.exports=new URL("../"+parcelRequire("dRo73").resolve("3gt2g"),import.meta.url).toString()})),parcelRequire.register("7k7o1",(function(e,t){$parcel$export(e.exports,"default",(()=>s));var o=parcelRequire("4xklQ");class r extends o.Mesh{constructor(e=.5,t=2,r=.15,a="white"){super(new o.BoxGeometry(e,t,r),new o.MeshPhongMaterial({color:a}))}}class a extends o.Object3D{constructor(){super(),this.index=0,this.x=0,this.z=0;let e=new r(.5,.5,.05,"lightgray");return this.add(e),this}}var s=a})),parcelRequire.register("j0YSa",(function(e,t){$parcel$export(e.exports,"default",(()=>n));var o=parcelRequire("4xklQ");parcelRequire("acMZl");class r extends o.Mesh{constructor(){super(new o.BoxGeometry(.5,2,.15),new o.MeshPhongMaterial({color:"white"}))}}class a extends o.Mesh{constructor(){super(new o.TorusGeometry(.15,.05,10,20),new o.MeshPhongMaterial({color:"black"}))}}class s extends o.Mesh{constructor(){super(new o.BoxGeometry(.5,2,.1),new o.MeshPhongMaterial({color:"white"}))}}class i extends o.Mesh{constructor(e){super(new o.CylinderGeometry(.1,.1,2,64,64),new o.MeshPhongMaterial({emissive:e,color:e,emissiveIntensity:1,transparent:!0,opacity:.7}))}}class l extends o.Object3D{constructor(e){super(),this.index=0,this.x=0,this.z=0,this.state=e,this.active=!0,this.type=e;let t=new s;t.rotateX(-Math.PI/2),t.position.set(0,-.95,0);let o=new r;o.position.set(0,0,-.93);let l=new r;l.position.set(0,0,.93);let n=new a;n.position.set(0,.6,.85);let c=new a;c.position.set(0,.6,-.85);let p=new a;p.position.set(0,0,.85);let d=new a;d.position.set(0,0,-.85);let g=new a;g.position.set(0,-.6,.85);let m=new a;m.position.set(0,-.6,-.85);let b=new i("blue");b.rotateX(-Math.PI/2),b.position.set(0,.6,0);let M=new i("blue");M.rotateX(-Math.PI/2),M.position.set(0,0,0);let h=new i("blue");h.rotateX(-Math.PI/2),h.position.set(0,-.6,0),this.blueLasers=[b,M,h];let u=new i("red");u.rotateX(-Math.PI/2),u.position.set(0,.6,0);let w=new i("red");w.rotateX(-Math.PI/2),w.position.set(0,0,0);let k=new i("red");return k.rotateX(-Math.PI/2),k.position.set(0,-.6,0),this.redLasers=[u,w,k],"blue"==e?(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue"):"red"!=e&&"multiColor"!=e||(this.blueLasers.forEach((e=>e.visible=!1)),this.state="red"),this.add(t),this.add(o),this.add(l),this.add(n),this.add(c),this.add(p),this.add(d),this.add(g),this.add(m),this.add(b),this.add(M),this.add(h),this.add(u),this.add(w),this.add(k),this}setVisible(){this.active=!0}setNotVisible(){this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!1)),this.active=!1}setBlue(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue")}setRed(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!0)),this.state="red")}}var n=l})),parcelRequire.register("4Bhaq",(function(e,t){$parcel$export(e.exports,"default",(()=>m));const o=[["Código inválido:","linha:","(Condição inválida)","(Bloco é aberto mas nunca é fechado)","(Bloco é fechado mas nunca é aberto)","Aviso: O código tem mais linhas do que o robô pode processar. Tente rescrever seu código em","linhas ou menos."],["Invalid code:","line:","(Invalid condition)","(Block is opened but never closed)","(Block is closed but never opened)","Warning: The code has more lines than the robot can process. Try rewriting your code in","lines or less."]];let r=window.location.href.includes("english")?1:0;const a=[{filter:new RegExp("^andarFrente(\\s+)?\\((\\s+)?(0|[1-9][0-9]*)(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^andarTras(\\s+)?\\((\\s+)?(0|[1-9][0-9]*)(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^coletarCristal(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"normal"},{filter:new RegExp("^desativarLaserAzul(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^desativarLaserVermelho(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),type:"conditional"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"conditional&&blockValidation"},{filter:new RegExp("^senão$"),type:"elseValidation"},{filter:new RegExp("^senão(\\s+)?{$"),type:"elseValidation&&blockValidation"},{filter:new RegExp("^}$"),type:"closeBlockValidation"},{filter:new RegExp("^{$"),type:"blockValidation"},{filter:new RegExp("^enquanto(\\s+)?\\((\\s+)?.+\\)$"),type:"loop"},{filter:new RegExp("^enquanto(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"loop&&blockValidation"},{filter:new RegExp("^girarManivela(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"}],s=[new RegExp("^laserAzulAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$"),new RegExp("^laserVermelhoAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$"),new RegExp("^portaFechada(\\s+)?\\((\\s+)?\\)(\\s+)?$")];function i(e){let t=e.trim(),o=e.substring(t.indexOf("(")+1,t.lastIndexOf(")"));for(let e=0;e<s.length;e++)if(s[e].test(o.trim()))return!0;return!1}function l(e,t){let o=!1,r=0;for(let a=t+1;a<e.length;a++)if(e[a].includes("}")){if(0==r){o=!0;break}r--}else{if(!e[a].includes("{"))continue;r++}return o}function n(e,t){let o=!1;for(let r=t-1;r>=0;r--)if(e[r].includes("{")){o=!0;break}return o}function c(e,t){let o=!1,r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?(\\s+)?$"),a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^}]*?$"),i=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),l=new RegExp("^senão$"),n=new RegExp("^senão(\\s+)?{$"),c=new RegExp("^senão(\\s+)?.+(\\s+)?$"),p=new RegExp("^senão(\\s+)?{[^]*?$"),d=null;for(let o=t-1;o>=0;o--)if(a.test(e[o].trim())||i.test(e[o].trim())||l.test(e[o].trim())||n.test(e[o].trim())){d=o;break}if(null!=d){let a="";for(let o=d;o<t;o++)a+=`${e[o].trim()}\n`;return r.test(a.trim())||s.test(a.trim())||c.test(a.trim())||p.test(a.trim())?(o=!0,o):o}return o}function p(e,t){let o=!1,r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?.+(\\s+)?$"),a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^]*?}$"),i=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),l=null;for(let o=t-1;o>=0;o--)if(a.test(e[o].trim())||i.test(e[o].trim())){l=o;break}if(null!=l){let a="";for(let o=l;o<t;o++)a+=`${e[o].trim()}\n`;return r.test(a.trim())||s.test(a.trim())?(o=!0,o):o}return o}function d(e,t){const o=[new RegExp("^andarFrente(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^andarTras(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$")];let r=[0,5],a=0,s="+",i=0;function l(e){return[{axis:0,value:"+"},{axis:1,value:"+"},{axis:0,value:"-"},{axis:1,value:"-"}][e]}function n(e){return e>3?0:e<0?3:e}for(let c=0;c<t;c++)if(o[0].test(e[c])){let t=parseInt(e[c].substring(e[c].indexOf("(")+1,e[c].indexOf(")")));"+"==s?r[a]+=t:r[a]-=t}else if(o[1].test(e[c])){let t=parseInt(e[c].substring(e[c].indexOf("(")+1,e[c].indexOf(")")));"-"==s?r[a]+=t:r[a]-=t}else if(o[2].test(e[c])){i--,i=n(i);const e=l(i);a=e.axis,s=e.value}else if(o[3].test(e[c])){i++,i=n(i);const e=l(i);a=e.axis,s=e.value}else{if(!o[4].test(e[c]))continue;{i--,i=n(i),i--,i=n(i);const e=l(i);a=e.axis,s=e.value}}return"+"==s?r[a]++:r[a]--,r}function g(e,t){document.getElementById("consoleArea").innerText+=`${o[r][0]} ${e} ${o[r][1]} ${t}\n`}function m(e,t=0){let s="const delay = (milisecs) => {return new Promise((resolve) => setTimeout(resolve,milisecs));}\nasync function runCode(){\n",m="\n",b=e.split("\n"),M=!0,h=0,u=!1;for(let e=0;e<b.length;e++){let w,k=!1;if(""!=b[e].trim()){for(let t=0;t<a.length;t++)if(k=a[t].filter.test(b[e].trim()),k){w=a[t].type;break}if(!k){g(b[e],e+1),M=!1;break}if("sequential"===w){let t=`editor.focus();\n                    editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n`;t+="await "+b[e].trim()+(u?"}":"")+"\n",s+=t,h++,u=!1}else if("conditional&&blockValidation"===w){let t=!1;if(l(b,e)?i(b[e])?t=!0:g(`${b[e]} ${o[r][2]}`,e+1):g(`${b[e]} ${o[r][3]}`,e+1),!t){M=!1;break}{let t=b[e].trim(),o=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`;o+=`if${t.substring(t.indexOf("("))}\n`,s+=o,h++}}else if("conditional"===w){if(!i(b[e])){g(`${b[e]} ${o[r][2]}`,e+1),M=!1;break}{let t=b[e].trim(),o=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`;o+=`if${t.substring(t.indexOf("("))}{\n`,s+=o,h++,u=!0}}else if("elseValidation"===w){if(!p(b,e)){g(`${b[e]} ${o[r][2]}`,e+1),M=!1;break}s+="else{\n",h++,u=!0}else if("elseValidation&&blockValidation"===w){let t=!1;if(l(b,e)?p(b,e)?t=!0:g(`${b[e]} ${o[r][2]}`,e+1):g(`${b[e]} ${o[r][3]}`,e+1),!t){M=!1;break}s+="else{\n",h++}else if("blockValidation"===w){if(!l(b,e)){g(`${b[e]} ${o[r][3]}`,e+1),M=!1;break}s+=`${b[e].trim()}\n`,h++}else if("closeBlockValidation"===w){if(!n(b,e)){g(`${b[e]} ${o[r][4]}`,e+1),M=!1;break}s+=`${b[e].trim()}\n`,h++}else if("mustCondition"===w)if(c(b,e)){let t=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`;t+=b[e].trim()+(u?"}":"")+"\n",s+=t,h++,u=!1}else{let t=a[6].filter.test(b[e].trim())?"blue":"red",o=d(b,e);m+=`badLuck([${o[0]},${o[1]}],'${t}')\n`;let r=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`;r+=b[e].trim()+(u?"}":"")+"\n",s+=r,h++,u=!1}else if("loop"===w){if(!i(b[e])){g(`${b[e]} ${o[r][2]}`,e+1),M=!1;break}{let t=b[e].trim(),o=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`;o+=`while${t.substring(t.indexOf("("))}{\n`,s+=o,h++,u=!0}}else if("loop&&blockValidation"===w){let t=!1;if(l(b,e)?i(b[e])?t=!0:g(`${b[e]} ${o[r][2]}`,e+1):g(`${b[e]} ${o[r][3]}`,e+1),!t){M=!1;break}{let t=b[e].trim(),o=`editor.focus();\n                        editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                        await delay(250);\n`,r=!0;for(let t=e;t<b.length&&!b[t].includes("}");t++)if(""!=b[t]&&t!=e){r=!1;break}o+=r?"while(true){break;":`while${t.substring(t.indexOf("("))}\n`,s+=o,h++}}else{let t=`editor.focus();\n                    editor.dispatch({selection:{anchor:editor.state.doc.line(${e+1}).from}});\n                    await delay(250);\n`;t+=b[e].trim()+(u?"}":"")+"\n",s+=t,h++,u=!1}if(t>0&&h>t){document.getElementById("consoleArea").innerText+=`${o[r][5]} ${t} ${o[r][6]}\n`,M=!1;break}}}return M?(s+=`}${m}runCode()\n`,s):null}})),parcelRequire.register("b4qUs",(function(e,t){e.exports=new URL("../"+parcelRequire("dRo73").resolve("4fPva"),import.meta.url).toString()}));var $8cbe7b70d24faae7$exports={};parcelRequire("dRo73").register(JSON.parse('{"houcP":"index.d1801c24.js","3gt2g":"door2.e849dc7b.jpg","4fPva":"metalWallLvl4.948adbae.jpg","2zoil":"index.339dda25.js","2sJFV":"index.5a96cabf.js"}')),parcelRequire("b0KIW");