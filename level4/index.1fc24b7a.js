function $parcel$export(e,o,t,a){Object.defineProperty(e,o,{get:t,set:a,enumerable:!0,configurable:!0})}var $parcel$global="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},$parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequiredf3e;null==parcelRequire&&(parcelRequire=function(e){if(e in $parcel$modules)return $parcel$modules[e].exports;if(e in $parcel$inits){var o=$parcel$inits[e];delete $parcel$inits[e];var t={id:e,exports:{}};return $parcel$modules[e]=t,o.call(t.exports,t,t.exports),t.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a},parcelRequire.register=function(e,o){$parcel$inits[e]=o},$parcel$global.parcelRequiredf3e=parcelRequire),parcelRequire.register("b0KIW",(function(module,exports){var $4xklQ=parcelRequire("4xklQ"),$bsNDL=parcelRequire("bsNDL"),$7FzN9=parcelRequire("7FzN9"),$1M2iF=parcelRequire("1M2iF"),$fzqfQ=parcelRequire("fzqfQ"),$i5CJu=parcelRequire("i5CJu"),$7k7o1=parcelRequire("7k7o1"),$j0YSa=parcelRequire("j0YSa"),$dhcg3=parcelRequire("dhcg3"),$4Bhaq=parcelRequire("4Bhaq"),$hfAuX=parcelRequire("hfAuX"),$8TDdX=parcelRequire("8TDdX");const sceneProperties={cancelExecution:!1,timer:0,phase:0,executing:!1},logModal=new(0,$8TDdX.Modal)(document.getElementById("logModal"));let timerUpadate,laserState,setLaserStates,setLaserStatesInterval,spikeTrapState,setSpikeTrapState,setSpikeTrapStateInterval;function updateTime(){sceneProperties.timer++}const editor=(0,$bsNDL.generateDefaultEditor)(document.getElementById("editorArea")),andarFrenteBtn=document.getElementById("andarFrente");andarFrenteBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"andarFrente(?)\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"andarFrente(?)\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const andarTrasBtn=document.getElementById("andarTras");andarTrasBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"andarTras(?)\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"andarTras(?)\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const girarEsquerdaBtn=document.getElementById("girarEsquerda");girarEsquerdaBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"girarEsquerda()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"girarEsquerda()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const girarDireitaBtn=document.getElementById("girarDireita");girarDireitaBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"girarDireita()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"girarDireita()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const darMeiaVoltaBtn=document.getElementById("darMeiaVolta");darMeiaVoltaBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"darMeiaVolta()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"darMeiaVolta()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const desativarLaserAzulBtn=document.getElementById("desativarLaserAzul");desativarLaserAzulBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"desativarLaserAzul()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"desativarLaserAzul()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const desativarLaserVermelhoBtn=document.getElementById("desativarLaserVermelho");desativarLaserVermelhoBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"desativarLaserVermelho()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"desativarLaserVermelho()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const girarManivelaBtn=document.getElementById("girarManivela");girarManivelaBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"girarManivela()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"coletarCristal()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const coletarCristalBtn=document.getElementById("coletarCristal");coletarCristalBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"coletarCristal()\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"coletarCristal()\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const laserAzulAtivoBtn=document.getElementById("laserAzulAtivo");laserAzulAtivoBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"laserAzulAtivo()"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"laserAzulAtivo()"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const laserVermelhoAtivoBtn=document.getElementById("laserVermelhoAtivo");laserVermelhoAtivoBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"laserVermelhoAtivo()"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"laserVermelhoAtivo()"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const portaFechadaBtn=document.getElementById("portaFechada");portaFechadaBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"portaFechada()"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"portaFechada()"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const condicaoFullBtn=document.getElementById("condicaoFull");condicaoFullBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"se(?){\n\n}\nsenão{\n\n}\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"se(?){\n\n}\nsenão{\n\n}\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const enquantoBtn=document.getElementById("enquanto");enquantoBtn.addEventListener("click",(()=>{let e,o,t=editor.state.selection.main.anchor,a=editor.state.selection.main.head;t<=a?(e=editor.state.update({changes:{from:t,to:a,insert:"enquanto(?){\n\n}\n"}}),o=editor.state.doc.lineAt(t).number):(e=editor.state.update({changes:{from:a,to:t,insert:"enquanto(?){\n\n}\n"}}),o=editor.state.doc.lineAt(a).number),editor.dispatch(e),editor.focus();let r=editor.state.doc.line(o+1).to;editor.dispatch({selection:{anchor:r}})}));const consoleElement=document.getElementById("consoleArea"),{renderer:renderer,scene:scene,camera:camera,controls:controls}=(0,$7FzN9.generateDefaultSceneObjects)(document.getElementById("phaseView")),gridMapHelper=new(0,$1M2iF.default),plane=gridMapHelper.createGridPlane(),actor=(0,$7FzN9.loadDefaultActor)(),wallTexture=(new $4xklQ.TextureLoader).load(new URL(parcelRequire("b4qUs")).toString());let objectives,walls,openDoors,crancks,cranckBases,cranckInteractionReferences,doors,traps,laserFences,girarManivela,portaFechada,coletarCristal,resetLevel,winCondition;function changeLaserActiveStatus(e,o){gridMapHelper.lasers[e].active=o,0==o?laserFences[e].setNotVisible():"red"==gridMapHelper.lasers[e].state?(laserFences[e].setVisible(),laserFences[e].setRed()):(laserFences[e].setVisible(),laserFences[e].setBlue())}function changeLaserStateStatus(e,o){gridMapHelper.lasers.forEach((e=>{"multiColor"==e.type&&(e.state=o)})),"blue"==o?laserFences.forEach((e=>{"multiColor"==e.type&&e.setBlue()})):"red"==o&&laserFences.forEach((e=>{"multiColor"==e.type&&e.setRed()}))}function lasersVisualRestart(){for(let e=0;e<laserFences.length;e++)laserFences[e].active=!0}function laserAzulAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"blue")}function laserVermelhoAtivo(){const e=new $4xklQ.Vector3;return actor.getObjectByName("interactionReference").getWorldPosition(e),null!=gridMapHelper.detectLaser(e,"red")}function desativarLaserAzul(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let o=gridMapHelper.detectLaser(e,"blue");null!=o?changeLaserActiveStatus(o,!1):(consoleElement.innerText+="O robô entrou em curto circuito por tentar desativar um laser azul que não existe.\n",sceneProperties.cancelExecution=!0)}function desativarLaserVermelho(){const e=new $4xklQ.Vector3;actor.getObjectByName("interactionReference").getWorldPosition(e);let o=gridMapHelper.detectLaser(e,"red");null!=o?changeLaserActiveStatus(o,!1):(consoleElement.innerText+="O robô entrou em curto circuito por tentar desativar um laser vermelho que não existe.\n",sceneProperties.cancelExecution=!0)}function badLuck(e,o){const t=new $4xklQ.Vector3(gridMapHelper.getGlobalXPositionFromCoord(e[0]),0,gridMapHelper.getGlobalZPositionFromCoord(e[1]));let a="blue"==o?"red":"blue",r=gridMapHelper.detectLaser(t,o);null!=r&&("multiColor"==gridMapHelper.lasers[r].type?(gridMapHelper.lasers[r].state=a,"blue"==a?laserFences[r].setBlue():laserFences[r].setRed()):gridMapHelper.lasers[r].active?(gridMapHelper.lasers[r].active=!1,laserFences[r].setNotVisible()):(gridMapHelper.lasers[r].active=!0,laserFences[r].setVisible(),"blue"==gridMapHelper.lasers[r].state?laserFences[r].setBlue():laserFences[r].setRed()))}async function andarFrente(e){let o=e>10?10:e;await(0,$7FzN9.translateActor)(actor,o,gridMapHelper,sceneProperties,consoleElement)}async function andarTras(e){let o=e>10?10:e;await(0,$7FzN9.translateActor)(actor,-o,gridMapHelper,sceneProperties,consoleElement)}async function girarEsquerda(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,1)}async function girarDireita(){await(0,$7FzN9.rotateActor)(actor,90,sceneProperties,-1)}async function darMeiaVolta(){await(0,$7FzN9.rotateActor)(actor,180,sceneProperties,1)}wallTexture.wrapS=$4xklQ.RepeatWrapping,wallTexture.wrapT=$4xklQ.RepeatWrapping,scene.add(plane),scene.add(actor);const phaseGeneration=[];function removeObjects(e,o,t,a,r,s,l,i){if(null!=e)for(let o=0;o<e.length;o++)scene.remove(e[o]);if(null!=o){for(let e=0;e<o.length;e++)scene.remove(o[e]);gridMapHelper.clearObstacles()}if(null!=t){for(let e=0;e<t.length;e++)scene.remove(t[e]);gridMapHelper.clearTraps()}if(null!=a){for(let e=0;e<a.length;e++)scene.remove(a[e]);gridMapHelper.clearLasers()}if(null!=r){for(let e=0;e<r.length;e++)scene.remove(r[e]);gridMapHelper.clearDoors()}if(null!=s){for(let e=0;e<s.length;e++)scene.remove(s[e]);gridMapHelper.clearDoors()}if(null!=l){for(let e=0;e<l.length;e++)scene.remove(l[e]);gridMapHelper.clearDoors()}if(null!=i){for(let e=0;e<i.length;e++)scene.remove(i[e]);gridMapHelper.clearDoors()}e=void 0,o=void 0,t=void 0,a=void 0,r=void 0,s=void 0,l=void 0,i=void 0}function animate(){renderer.render(scene,camera),controls.update(),requestAnimationFrame(animate),(0,$hfAuX.displayTime)(sceneProperties.timer,document.getElementById("timer"))}phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 1 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(1),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(9,9,5,5),scene.add(objectives[0]),openDoors=[],doors=[],cranckBases=[],crancks=[],cranckInteractionReferences=[],cranckBases.push(new(0,$7k7o1.default)),crancks.push(new(0,$i5CJu.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(5)),crancks[0].correctPos("right",cranckInteractionReferences[0],cranckBases[0]),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(5,5,5,5),scene.add(crancks[0]),scene.add(cranckBases[0]),scene.add(doors[0]),openDoors.push(!1),walls=[];const e=new $4xklQ.BoxGeometry(18,2,2),o=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];o[2].map.repeat.set(9,1),o[3].map.repeat.set(9,1),o[4].map.repeat.set(9,1),o[5].map.repeat.set(9,1),walls.push(new $4xklQ.Mesh(e,o)),walls.push(new $4xklQ.Mesh(e,o)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),scene.add(walls[0]),scene.add(walls[1]),gridMapHelper.addObstacle(1,9,4,4),gridMapHelper.addObstacle(1,9,6,6),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[1].active=!1,e()):requestAnimationFrame((function(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}))}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles[0].active=!0,gridMapHelper.obstacles[1].active=!0},winCondition=()=>!objectives[0].visible,timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 2 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(0,0,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(crancks[0]),scene.add(crancks[1]),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[0].rotateY(-Math.PI/2),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),doors[1].rotateY(Math.PI/2),gridMapHelper.addObstacle(5,5,7,7),gridMapHelper.addObstacle(5,5,3,3),scene.add(doors[0]),scene.add(doors[1]),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addLaser(7,9,laserFences[0]),gridMapHelper.addLaser(7,0,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,7,traps[0]),gridMapHelper.addTrap(0,2,traps[1]),scene.add(traps[0]),scene.add(traps[1]),walls=[];const e=new $4xklQ.BoxGeometry(6,2,2),o=new $4xklQ.BoxGeometry(2,2,2),t=new $4xklQ.BoxGeometry(8,2,2),a=new $4xklQ.BoxGeometry(4,2,2),r=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];r[2].map.repeat.set(3,1),r[3].map.repeat.set(3,1),r[4].map.repeat.set(3,1),r[5].map.repeat.set(3,1);const s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(4,1),l[3].map.repeat.set(4,1),l[4].map.repeat.set(4,1),l[5].map.repeat.set(4,1);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(2,1),i[3].map.repeat.set(2,1),i[4].map.repeat.set(2,1),i[5].map.repeat.set(2,1),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(o,s)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[3].rotateY(Math.PI/2),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[4].rotateY(Math.PI/2),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[6].rotateY(Math.PI/2),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(3.5)),walls[8].rotateY(Math.PI/2),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[9].rotateY(Math.PI/2),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(3.5)),walls[10].rotateY(Math.PI/2),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(2)),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),gridMapHelper.addObstacle(2,4,6,6),gridMapHelper.addObstacle(1,3,7,7),gridMapHelper.addObstacle(3,3,8,8),gridMapHelper.addObstacle(6,6,6,6),gridMapHelper.addObstacle(7,7,6,8),gridMapHelper.addObstacle(8,8,7,7),gridMapHelper.addObstacle(3,3,1,4),gridMapHelper.addObstacle(1,2,2,2),gridMapHelper.addObstacle(4,4,4,4),gridMapHelper.addObstacle(7,7,1,4),gridMapHelper.addObstacle(6,6,4,4),gridMapHelper.addObstacle(8,8,2,2);(new $4xklQ.Object3D).position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserActiveStatus(0,!0),changeLaserActiveStatus(1,!1)):(changeLaserActiveStatus(0,!1),changeLaserActiveStatus(1,!0))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 3 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(9,9,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(2)),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("up",cranckInteractionReferences[2],cranckBases[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(1,1,9,9),gridMapHelper.addObstacle(8,8,7,7),gridMapHelper.addObstacle(9,9,1,1),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),gridMapHelper.addLaser(5,5,laserFences[0]),gridMapHelper.addLaser(9,6,laserFences[1]),laserFences[1].rotateY(Math.PI/2),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(1)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(8)),gridMapHelper.addTrap(0,1,traps[0]),gridMapHelper.addTrap(3,5,traps[1]),gridMapHelper.addTrap(9,8,traps[2]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(4,2,2),t=new $4xklQ.BoxGeometry(6,2,2),a=new $4xklQ.BoxGeometry(8,2,2),r=(new $4xklQ.BoxGeometry(10,2,2),new $4xklQ.BoxGeometry(12,2,2)),s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(2,1),l[3].map.repeat.set(2,1),l[4].map.repeat.set(2,1),l[5].map.repeat.set(2,1);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(3,1),i[3].map.repeat.set(3,1),i[4].map.repeat.set(3,1),i[5].map.repeat.set(3,1);const n=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];n[2].map.repeat.set(4,1),n[3].map.repeat.set(4,1),n[4].map.repeat.set(4,1),n[5].map.repeat.set(4,1);const p=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];p[2].map.repeat.set(6,1),p[3].map.repeat.set(6,1),p[4].map.repeat.set(6,1),p[5].map.repeat.set(6,1),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(r,p)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(o,l)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2.5)),walls[7].rotateY(Math.PI/2),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[10].rotateY(Math.PI/2),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[11].rotateY(Math.PI/2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),gridMapHelper.addObstacle(1,1,6,8),gridMapHelper.addObstacle(1,1,1,4),gridMapHelper.addObstacle(2,3,6,6),gridMapHelper.addObstacle(2,3,4,4),gridMapHelper.addObstacle(3,8,8,8),gridMapHelper.addObstacle(5,8,6,6),gridMapHelper.addObstacle(5,8,4,4),gridMapHelper.addObstacle(5,5,2,3),gridMapHelper.addObstacle(3,4,3,3),gridMapHelper.addObstacle(3,3,1,1),gridMapHelper.addObstacle(7,7,0,2),gridMapHelper.addObstacle(8,8,1,2),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 4 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(6,6,9,9),gridMapHelper.addObstacle(9,9,9,9),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(0)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("up",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[0].rotateY(Math.PI/2),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,7,7),gridMapHelper.addObstacle(2,2,1,1),gridMapHelper.addObstacle(6,6,8,8),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(0)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addLaser(1,0,laserFences[0]),gridMapHelper.addLaser(3,2,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(9)),traps[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),traps[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(6)),traps[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(4)),traps[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(3)),gridMapHelper.addTrap(1,6,traps[0]),gridMapHelper.addTrap(1,5,traps[1]),gridMapHelper.addTrap(1,4,traps[2]),gridMapHelper.addTrap(1,3,traps[3]),gridMapHelper.addTrap(3,4,traps[4]),gridMapHelper.addTrap(5,9,traps[5]),gridMapHelper.addTrap(5,4,traps[6]),gridMapHelper.addTrap(7,9,traps[7]),gridMapHelper.addTrap(7,6,traps[8]),gridMapHelper.addTrap(7,4,traps[9]),gridMapHelper.addTrap(9,3,traps[10]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),scene.add(traps[5]),scene.add(traps[6]),scene.add(traps[7]),scene.add(traps[8]),scene.add(traps[9]),scene.add(traps[10]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(2,2,4),t=new $4xklQ.BoxGeometry(2,2,6),a=new $4xklQ.BoxGeometry(8,2,2),r=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[0].map.repeat.set(2,1),s[1].map.repeat.set(2,1),s[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),s[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[0].map.repeat.set(3,1),l[1].map.repeat.set(3,1),l[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),l[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(4,1),i[3].map.repeat.set(4,1),i[4].map.repeat.set(4,1),i[5].map.repeat.set(4,1),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(e,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(.5)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(6.5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1)),gridMapHelper.addObstacle(1,1,7,8),gridMapHelper.addObstacle(1,1,1,2),gridMapHelper.addObstacle(3,3,7,8),gridMapHelper.addObstacle(3,3,5,5),gridMapHelper.addObstacle(3,3,3,3),gridMapHelper.addObstacle(3,3,0,1),gridMapHelper.addObstacle(4,4,7,7),gridMapHelper.addObstacle(5,5,7,8),gridMapHelper.addObstacle(5,8,5,5),gridMapHelper.addObstacle(5,5,1,3),gridMapHelper.addObstacle(7,7,7,8),gridMapHelper.addObstacle(7,7,1,3),gridMapHelper.addObstacle(8,8,1,1),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 5 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(3),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(7)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(3)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addObstacle(2,2,7,7),gridMapHelper.addObstacle(2,2,3,3),gridMapHelper.addObstacle(8,8,5,5),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("right",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[0].rotateY(Math.PI/2),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,8,8),gridMapHelper.addObstacle(2,2,2,2),gridMapHelper.addObstacle(9,9,8,8),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[0].rotateY(Math.PI/2),gridMapHelper.addLaser(0,2,laserFences[0]),gridMapHelper.addLaser(7,9,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(3)),gridMapHelper.addTrap(1,7,traps[0]),gridMapHelper.addTrap(1,3,traps[1]),gridMapHelper.addTrap(3,7,traps[2]),gridMapHelper.addTrap(3,5,traps[3]),gridMapHelper.addTrap(3,3,traps[4]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(4,2,2),t=new $4xklQ.BoxGeometry(6,2,6),a=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),r=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];r[2].map.repeat.set(2,1),r[3].map.repeat.set(2,1),r[4].map.repeat.set(2,1),r[5].map.repeat.set(2,1);const s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[0].map.repeat.set(3,1),s[1].map.repeat.set(3,1),s[2].map.repeat.set(3,3),s[3].map.repeat.set(3,3),s[4].map.repeat.set(3,1),s[5].map.repeat.set(3,1),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[16].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[17].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(4)),gridMapHelper.addObstacle(1,1,8,8),gridMapHelper.addObstacle(1,2,6,6),gridMapHelper.addObstacle(1,2,4,4),gridMapHelper.addObstacle(1,1,2,2),gridMapHelper.addObstacle(1,2,0,0),gridMapHelper.addObstacle(3,4,8,8),gridMapHelper.addObstacle(3,4,6,6),gridMapHelper.addObstacle(3,4,4,4),gridMapHelper.addObstacle(3,4,2,2),gridMapHelper.addObstacle(3,3,0,0),gridMapHelper.addObstacle(5,7,6,8),gridMapHelper.addObstacle(5,7,2,4),gridMapHelper.addObstacle(5,5,1,1),gridMapHelper.addObstacle(7,8,1,1),gridMapHelper.addObstacle(8,8,8,8),gridMapHelper.addObstacle(8,8,2,2),gridMapHelper.addObstacle(9,9,6,6),gridMapHelper.addObstacle(9,9,4,4),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),scene.add(walls[16]),scene.add(walls[17]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[2].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0,objectives[2].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible),laserState=0,setLaserStates=()=>{changeLaserStateStatus(0,0==laserState?"blue":"red")},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 6 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(2),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(0,0,0,0),gridMapHelper.addObstacle(7,7,9,9),scene.add(objectives[0]),scene.add(objectives[1]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[0].correctPos("down",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("down",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("down",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(0)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(1,1,8,8),gridMapHelper.addObstacle(3,3,0,0),gridMapHelper.addObstacle(8,8,0,0),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("blue")),laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[0].rotateY(Math.PI/2),laserFences[1].rotateY(Math.PI/2),gridMapHelper.addLaser(4,6,laserFences[0]),gridMapHelper.addLaser(9,6,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(5)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(2)),gridMapHelper.addTrap(0,2,traps[0]),gridMapHelper.addTrap(3,5,traps[1]),gridMapHelper.addTrap(3,3,traps[2]),gridMapHelper.addTrap(7,2,traps[3]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(4,2,2),t=new $4xklQ.BoxGeometry(2,2,6),a=new $4xklQ.BoxGeometry(2,2,4),r=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[2].map.repeat.set(2,1),s[3].map.repeat.set(2,1),s[4].map.repeat.set(2,1),s[5].map.repeat.set(2,1);const l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[0].map.repeat.set(3,1),l[1].map.repeat.set(3,1),l[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),l[3].map.rotation=(0,$7FzN9.degreeToRadians)(90);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[0].map.repeat.set(2,1),i[1].map.repeat.set(2,1),i[2].map.rotation=(0,$7FzN9.degreeToRadians)(90),i[3].map.rotation=(0,$7FzN9.degreeToRadians)(90),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(o,s)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(t,l)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(a,i)),walls.push(new $4xklQ.Mesh(e,r)),walls.push(new $4xklQ.Mesh(a,i)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(3.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(5.5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),gridMapHelper.addObstacle(1,1,9,9),gridMapHelper.addObstacle(1,2,7,7),gridMapHelper.addObstacle(1,2,2,2),gridMapHelper.addObstacle(1,1,0,0),gridMapHelper.addObstacle(3,3,6,8),gridMapHelper.addObstacle(3,4,4,4),gridMapHelper.addObstacle(3,3,1,2),gridMapHelper.addObstacle(4,4,8,8),gridMapHelper.addObstacle(5,6,6,6),gridMapHelper.addObstacle(5,6,2,2),gridMapHelper.addObstacle(6,6,7,9),gridMapHelper.addObstacle(6,6,3,5),gridMapHelper.addObstacle(6,6,0,0),gridMapHelper.addObstacle(8,8,6,7),gridMapHelper.addObstacle(8,8,4,4),gridMapHelper.addObstacle(8,8,1,2),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[2].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[3].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0),objectives[0].visible=!0,objectives[1].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!objectives[0].visible&&!objectives[1].visible,laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(0,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(0,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 7 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(4),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(8)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),0,gridMapHelper.getGlobalZPositionFromCoord(9)),objectives[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(0,0,8,8),gridMapHelper.addObstacle(0,0,0,0),gridMapHelper.addObstacle(7,7,9,9),gridMapHelper.addObstacle(9,9,0,0),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),scene.add(objectives[3]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(2)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),0,gridMapHelper.getGlobalZPositionFromCoord(8)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(5)),gridMapHelper.addTrap(0,2,traps[0]),gridMapHelper.addTrap(0,7,traps[1]),gridMapHelper.addTrap(6,8,traps[2]),gridMapHelper.addTrap(8,5,traps[3]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),doors.push(new(0,$fzqfQ.default)(crancks[3])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(6)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(7),1,gridMapHelper.getGlobalZPositionFromCoord(7)),crancks[0].correctPos("left",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("down",cranckInteractionReferences[2],cranckBases[2]),crancks[3].correctPos("right",cranckInteractionReferences[3],cranckBases[3]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(cranckBases[3]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),scene.add(crancks[3]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(9)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(8)),doors[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(7)),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(1,1,9,9),gridMapHelper.addObstacle(1,1,1,1),gridMapHelper.addObstacle(4,4,8,8),gridMapHelper.addObstacle(8,8,7,7),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),scene.add(doors[3]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(6)),laserFences[1].rotateY(Math.PI/2),gridMapHelper.addLaser(5,9,laserFences[0]),gridMapHelper.addLaser(6,6,laserFences[1]),scene.add(laserFences[0]),scene.add(laserFences[1]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(4,2,2),t=new $4xklQ.BoxGeometry(6,2,2),a=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),r=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];r[2].map.repeat.set(2,1),r[3].map.repeat.set(2,1),r[4].map.repeat.set(2,1),r[5].map.repeat.set(2,1);const s=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];s[2].map.repeat.set(3,1),s[3].map.repeat.set(3,1),s[4].map.repeat.set(3,1),s[5].map.repeat.set(3,1),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(t,s)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(o,r)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(e,a)),walls.push(new $4xklQ.Mesh(o,r)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(7.5)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(8.5)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[2].rotateY(Math.PI/2),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[6].rotateY(Math.PI/2),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(0)),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[10].rotateY(Math.PI/2),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(4)),walls[15].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[16].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[17].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(0)),gridMapHelper.addObstacle(1,1,7,8),gridMapHelper.addObstacle(3,3,8,9),gridMapHelper.addObstacle(1,1,2,4),gridMapHelper.addObstacle(2,3,4,4),gridMapHelper.addObstacle(2,2,2,2),gridMapHelper.addObstacle(4,4,6,6),gridMapHelper.addObstacle(5,5,6,8),gridMapHelper.addObstacle(1,3,0,0),gridMapHelper.addObstacle(4,4,2,2),gridMapHelper.addObstacle(6,6,2,2),gridMapHelper.addObstacle(5,5,1,3),gridMapHelper.addObstacle(8,8,9,9),gridMapHelper.addObstacle(7,9,8,8),gridMapHelper.addObstacle(7,8,6,6),gridMapHelper.addObstacle(7,8,4,4),gridMapHelper.addObstacle(8,8,3,3),gridMapHelper.addObstacle(8,8,1,1),gridMapHelper.addObstacle(7,8,0,0),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),scene.add(walls[15]),scene.add(walls[16]),scene.add(walls[17]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[3],gridMapHelper)?!openDoors[3]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[6].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[3],gridMapHelper)){function o(){doors[3].lerpDoor(0,-2),doors[3].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[3].getDoorY().toFixed(1)?(openDoors[3]=!0,gridMapHelper.obstacles[7].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[2].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[3],gridMapHelper)?(objectives[3].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[3].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(1,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(1,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),timerUpadate=setInterval(updateTime,1e3)})),phaseGeneration.push((()=>{document.getElementById("phaseTitle").innerText="Nível 4 - Fase 8 de 8",document.getElementById("phaseObjective").innerText="Abra a porta, faça o robô chegar ao cristal, após isso, o colete.",sceneProperties.executing=!1,camera.position.set(0,15,30),actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),objectives=(0,$7FzN9.loadDefaultObjectives)(4),objectives[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(0)),objectives[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(6)),objectives[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),0,gridMapHelper.getGlobalZPositionFromCoord(9)),gridMapHelper.addObstacle(0,0,0,0),gridMapHelper.addObstacle(9,9,0,0),gridMapHelper.addObstacle(5,5,6,6),gridMapHelper.addObstacle(9,9,9,9),scene.add(objectives[0]),scene.add(objectives[1]),scene.add(objectives[2]),scene.add(objectives[3]),traps=[],traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps.push(new(0,$dhcg3.SpikeTrap)),traps[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(3)),traps[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),0,gridMapHelper.getGlobalZPositionFromCoord(0)),traps[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),0,gridMapHelper.getGlobalZPositionFromCoord(7)),traps[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),0,gridMapHelper.getGlobalZPositionFromCoord(4)),gridMapHelper.addTrap(1,3,traps[0]),gridMapHelper.addTrap(2,3,traps[1]),gridMapHelper.addTrap(2,0,traps[2]),gridMapHelper.addTrap(5,7,traps[3]),gridMapHelper.addTrap(8,4,traps[4]),scene.add(traps[0]),scene.add(traps[1]),scene.add(traps[2]),scene.add(traps[3]),scene.add(traps[4]),openDoors=[],doors=[],crancks=[],cranckBases=[],cranckInteractionReferences=[],crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),crancks.push(new(0,$i5CJu.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckBases.push(new(0,$7k7o1.default)),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),cranckInteractionReferences.push(new $4xklQ.Object3D),doors.push(new(0,$fzqfQ.default)(crancks[0])),doors.push(new(0,$fzqfQ.default)(crancks[1])),doors.push(new(0,$fzqfQ.default)(crancks[2])),crancks[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(8)),crancks[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(2)),crancks[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(4)),crancks[0].correctPos("up",cranckInteractionReferences[0],cranckBases[0]),crancks[1].correctPos("right",cranckInteractionReferences[1],cranckBases[1]),crancks[2].correctPos("right",cranckInteractionReferences[2],cranckBases[2]),scene.add(cranckBases[0]),scene.add(cranckBases[1]),scene.add(cranckBases[2]),scene.add(crancks[0]),scene.add(crancks[1]),scene.add(crancks[2]),doors[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(9)),doors[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(1)),doors[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(5)),doors[1].rotateY(Math.PI/2),doors[2].rotateY(Math.PI/2),gridMapHelper.addObstacle(2,2,9,9),gridMapHelper.addObstacle(1,1,1,1),gridMapHelper.addObstacle(5,5,5,5),scene.add(doors[0]),scene.add(doors[1]),scene.add(doors[2]),openDoors.push(!1),openDoors.push(!1),openDoors.push(!1),laserFences=[],laserFences.push(new(0,$j0YSa.default)("multiColor")),laserFences.push(new(0,$j0YSa.default)("red")),laserFences.push(new(0,$j0YSa.default)("blue")),laserFences[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(9)),laserFences[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(5),1,gridMapHelper.getGlobalZPositionFromCoord(2)),laserFences[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(9),1,gridMapHelper.getGlobalZPositionFromCoord(5)),laserFences[1].rotateY(Math.PI/2),laserFences[2].rotateY(Math.PI/2),gridMapHelper.addLaser(4,9,laserFences[0]),gridMapHelper.addLaser(5,2,laserFences[1]),gridMapHelper.addLaser(9,5,laserFences[2]),scene.add(laserFences[0]),scene.add(laserFences[1]),scene.add(laserFences[2]),walls=[];const e=new $4xklQ.BoxGeometry(2,2,2),o=new $4xklQ.BoxGeometry(4,2,2),t=new $4xklQ.BoxGeometry(6,2,2),a=new $4xklQ.BoxGeometry(8,2,2),r=new $4xklQ.BoxGeometry(10,2,2),s=new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),l=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];l[2].map.repeat.set(2,1),l[3].map.repeat.set(2,1),l[4].map.repeat.set(2,1),l[5].map.repeat.set(2,1);const i=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];i[2].map.repeat.set(3,1),i[3].map.repeat.set(3,1),i[4].map.repeat.set(3,1),i[5].map.repeat.set(3,1);const n=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];n[2].map.repeat.set(4,1),n[3].map.repeat.set(4,1),n[4].map.repeat.set(4,1),n[5].map.repeat.set(4,1);const p=[new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()}),new $4xklQ.MeshLambertMaterial({map:wallTexture.clone()})];p[2].map.repeat.set(5,1),p[3].map.repeat.set(5,1),p[4].map.repeat.set(5,1),p[5].map.repeat.set(5,1),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(r,p)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(t,i)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(e,s)),walls.push(new $4xklQ.Mesh(a,n)),walls.push(new $4xklQ.Mesh(o,l)),walls.push(new $4xklQ.Mesh(o,l)),walls[0].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(8)),walls[0].rotateY(Math.PI/2),walls[1].position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[1].rotateY(Math.PI/2),walls[2].position.set(gridMapHelper.getGlobalXPositionFromCoord(1),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[2].rotateY(Math.PI/2),walls[3].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(6)),walls[3].rotateY(Math.PI/2),walls[4].position.set(gridMapHelper.getGlobalXPositionFromCoord(2),1,gridMapHelper.getGlobalZPositionFromCoord(1)),walls[5].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(6.5)),walls[5].rotateY(Math.PI/2),walls[6].position.set(gridMapHelper.getGlobalXPositionFromCoord(3),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[7].position.set(gridMapHelper.getGlobalXPositionFromCoord(4),1,gridMapHelper.getGlobalZPositionFromCoord(2)),walls[7].rotateY(Math.PI/2),walls[8].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(9)),walls[9].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(5.5)),walls[9].rotateY(Math.PI/2),walls[10].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(7)),walls[11].position.set(gridMapHelper.getGlobalXPositionFromCoord(8),1,gridMapHelper.getGlobalZPositionFromCoord(5)),walls[12].position.set(gridMapHelper.getGlobalXPositionFromCoord(6),1,gridMapHelper.getGlobalZPositionFromCoord(1.5)),walls[12].rotateY(Math.PI/2),walls[13].position.set(gridMapHelper.getGlobalXPositionFromCoord(7.5),1,gridMapHelper.getGlobalZPositionFromCoord(3)),walls[14].position.set(gridMapHelper.getGlobalXPositionFromCoord(8.5),1,gridMapHelper.getGlobalZPositionFromCoord(1)),gridMapHelper.addObstacle(0,0,7,9),gridMapHelper.addObstacle(0,0,1,3),gridMapHelper.addObstacle(1,1,5,5),gridMapHelper.addObstacle(2,2,4,8),gridMapHelper.addObstacle(2,2,1,1),gridMapHelper.addObstacle(3,3,3,3),gridMapHelper.addObstacle(4,4,5,8),gridMapHelper.addObstacle(4,4,1,3),gridMapHelper.addObstacle(8,8,9,9),gridMapHelper.addObstacle(6,9,7,7),gridMapHelper.addObstacle(6,6,5,6),gridMapHelper.addObstacle(8,8,5,5),gridMapHelper.addObstacle(6,6,0,3),gridMapHelper.addObstacle(7,8,3,3),gridMapHelper.addObstacle(8,9,1,1),scene.add(walls[0]),scene.add(walls[1]),scene.add(walls[2]),scene.add(walls[3]),scene.add(walls[4]),scene.add(walls[5]),scene.add(walls[6]),scene.add(walls[7]),scene.add(walls[8]),scene.add(walls[9]),scene.add(walls[10]),scene.add(walls[11]),scene.add(walls[12]),scene.add(walls[13]),scene.add(walls[14]),portaFechada=()=>!sceneProperties.cancelExecution&&((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)?!openDoors[0]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)?!openDoors[1]:(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)?!openDoors[2]:(consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",!1)),girarManivela=()=>new Promise((e=>{if(sceneProperties.cancelExecution&&e(),(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[0],gridMapHelper)){function o(){doors[0].lerpDoor(0,-2),doors[0].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[0].getDoorY().toFixed(1)?(openDoors[0]=!0,gridMapHelper.obstacles[4].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[1],gridMapHelper)){function o(){doors[1].lerpDoor(0,-2),doors[1].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[1].getDoorY().toFixed(1)?(openDoors[1]=!0,gridMapHelper.obstacles[5].active=!1,e()):requestAnimationFrame(o)}else if((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),cranckInteractionReferences[2],gridMapHelper)){function o(){doors[2].lerpDoor(0,-2),doors[2].rotateCranckZ((0,$7FzN9.degreeToRadians)(-5)),e()}-2==doors[2].getDoorY().toFixed(1)?(openDoors[2]=!0,gridMapHelper.obstacles[6].active=!1,e()):requestAnimationFrame(o)}else consoleElement.innerText+="É preciso estar de frente de uma manivela para usar este comando.\n",e()})),coletarCristal=()=>{sceneProperties.cancelExecution||((0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[0],gridMapHelper)?(objectives[0].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[0].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[1],gridMapHelper)?(objectives[1].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[1].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[2],gridMapHelper)?(objectives[2].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[2].active=!1):(0,$7FzN9.checkCollision)(actor.getObjectByName("interactionReference"),objectives[3],gridMapHelper)?(objectives[3].visible=!1,consoleElement.innerText+="Cristal coletado com sucesso.\n",gridMapHelper.obstacles[3].active=!1):consoleElement.innerText+="Robô não está em frente ao cristal.\n")},resetLevel=()=>{actor.position.set(gridMapHelper.getGlobalXPositionFromCoord(0),1,gridMapHelper.getGlobalZPositionFromCoord(5)),actor.rotation.set(0,(0,$7FzN9.degreeToRadians)(90),0),actor.getObjectByName("eve").rotation.set(0,0,0);for(let e=0;e<objectives.length;e++)objectives[e].visible=!0;for(let e=0;e<openDoors.length;e++)openDoors[e]=!1;doors.forEach((e=>e.resetPos())),gridMapHelper.obstacles.forEach((e=>e.active=!0)),gridMapHelper.restartLasers(),lasersVisualRestart(),setLaserStates()},winCondition=()=>!(objectives[0].visible||objectives[1].visible||objectives[2].visible||objectives[3].visible),laserState=0,setLaserStates=()=>{0==laserState?(changeLaserStateStatus(0,"blue"),changeLaserActiveStatus(1,!0),changeLaserActiveStatus(2,!0)):(changeLaserStateStatus(0,"red"),changeLaserActiveStatus(1,!1),changeLaserActiveStatus(2,!1))},setLaserStatesInterval=setInterval((()=>{sceneProperties.executing||(laserState=(laserState+1)%2,setLaserStates())}),1e3),spikeTrapState=0,setSpikeTrapState=()=>{0==spikeTrapState?(0,$dhcg3.trapsDeactivation)(traps):(0,$dhcg3.trapsActivation)(traps)},setSpikeTrapStateInterval=setInterval((()=>{sceneProperties.executing||(spikeTrapState=(spikeTrapState+1)%2,setSpikeTrapState())}),1e3),document.getElementById("winMessage").innerText="Nível Concluído",document.getElementById("advanceBtn").innerText="Finalizar",timerUpadate=setInterval(updateTime,1e3)})),window.addEventListener("resize",(()=>{(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera)}));const finishEarlierButton=document.getElementById("finishEarlier"),execBtn=document.getElementById("execBtn");execBtn.addEventListener("click",(async function(){const codeParsed=(0,$4Bhaq.default)(editor.state.doc.toString());console.log(codeParsed),sceneProperties.cancelExecution=!1,null!=traps&&(0,$dhcg3.trapsDeactivation)(traps),null!=codeParsed&&(resetLevel(),this.disabled=!0,sceneProperties.executing=!0,await eval(codeParsed),winCondition()?($bsNDL.readOnlyState.doc=editor.state.doc,editor.setState($bsNDL.readOnlyState),document.getElementById("winMessage").classList.remove("invisible"),document.getElementById("advanceBtn").classList.remove("invisible"),document.getElementById("resetBtn").disabled=!0,finishEarlierButton.disabled=!0,clearInterval(timerUpadate),sceneProperties.phase==phaseGeneration.length-1&&(0,$hfAuX.configureDataAndUpload)(document.getElementById("name"),document.getElementById("age"),"gender","prog-exp",document.getElementById("subBtn"),sceneProperties.timer,"../","Nível 4/Completo")):(sceneProperties.executing=!1,this.disabled=!1))}));const resetBtn=document.getElementById("resetBtn");resetBtn.addEventListener("click",(()=>{sceneProperties.cancelExecution=!0,resetLevel()}));const advanceBtn=document.getElementById("advanceBtn");advanceBtn.addEventListener("click",(e=>{sceneProperties.phase++,sceneProperties.phase<phaseGeneration.length?(setLaserStatesInterval&&(clearInterval(setLaserStatesInterval),setLaserStatesInterval=void 0),removeObjects(objectives,walls,traps,laserFences,doors,crancks,cranckBases,cranckInteractionReferences),phaseGeneration[sceneProperties.phase](),editor.setState($bsNDL.editState),consoleElement.innerText=null,document.getElementById("winMessage").classList.add("invisible"),document.getElementById("advanceBtn").classList.add("invisible"),execBtn.disabled=!1,resetBtn.disabled=!1,finishEarlierButton.disabled=!1):(sceneProperties.phase=sceneProperties.phase>phaseGeneration.length?phaseGeneration.length:sceneProperties.phase,logModal.show())})),finishEarlierButton.addEventListener("click",(e=>{confirm("Deseja realmente finalizar a prática?")&&(clearInterval(timerUpadate),(0,$hfAuX.configureDataAndUpload)(document.getElementById("name"),document.getElementById("age"),"gender","prog-exp",document.getElementById("subBtn"),sceneProperties.timer,"../",`Nível 4/Fase ${sceneProperties.phase+1}`),logModal.show())})),(0,$7FzN9.resizeCanvasToDisplaySize)(renderer,camera),phaseGeneration[sceneProperties.phase](),animate()})),parcelRequire.register("fzqfQ",(function(e,o){$parcel$export(e.exports,"default",(()=>m));var t=parcelRequire("4xklQ");parcelRequire("i5CJu");let a=new t.TextureLoader;function r(e,o=null,r=1,s=1){let l;return e||(e="rgb(255,255,255)"),o?(l=new t.MeshBasicMaterial({map:a.load(o),color:e}),l.map.wrapS=l.map.wrapT=t.RepeatWrapping,l.map.minFilter=l.map.magFilter=t.LinearFilter,l.map.repeat.set(r,s)):l=new t.MeshBasicMaterial({color:e}),l}const s=new URL(parcelRequire("bbyur")).toString();let l=[r("lightgray",s),r("lightgray",s),r("gray"),r("lightgray"),r("lightgray"),r("lightgray")];class i extends t.Mesh{constructor(e=.5,o=2,a=.15,r="white"){super(new t.BoxGeometry(e,o,a),new t.MeshPhongMaterial({color:r}))}}class n extends t.Mesh{constructor(){super(new t.TorusGeometry(.35,.05,10,20),new t.MeshPhongMaterial({color:"red"}))}}class p extends t.Mesh{constructor(e=.03,o=.03,a=.4,r=12,s=12,l="red"){super(new t.CylinderGeometry(e,o,a,r,s),new t.MeshPhongMaterial({color:l}))}}class d extends t.Mesh{constructor(e="white",o=.15,a=2,r=.1){super(new t.BoxGeometry(o,a,r),new t.MeshLambertMaterial({color:e}))}}class c extends t.Mesh{constructor(e){super(new t.BoxGeometry(.2,1.9,2),l)}}class g extends t.Object3D{constructor(e){super(),this.index=0,this.x=0,this.z=0,this.active=!0,this.cranck=e;let o=new d;o.rotateX(-Math.PI/2),o.position.set(.175,-.95,0);let t=new d;t.rotateX(-Math.PI/2),t.position.set(-.175,-.95,0);let a=new d("black",.2,2,.01);a.rotateX(-Math.PI/2),a.position.set(0,-.95,0);let r=new c;r.position.set(0,0,0),this.doorY=r.position.y,this.doors=[r];let s=new i(.5,2,.1);s.position.set(0,0,-.98);let l=new i(.5,2,.1);l.position.set(0,0,.98);let n=new i(.15,2,.1);n.position.set(.175,0,.92);let p=new i(.15,2,.1);p.position.set(-.175,0,.92);let g=new i(.15,2,.1);g.position.set(.175,0,-.92);let m=new i(.15,2,.1);return m.position.set(-.175,0,-.92),new i(.5,.5,.05,"lightgray").position.set(-2,0,-.995),this.crancks=[this.cranck],this.add(o),this.add(t),this.add(a),this.add(r),this.add(s),this.add(l),this.add(n),this.add(p),this.add(g),this.add(m),this}setVisible(){this.cranckDoors.forEach((e=>e.visible=!0)),this.active=!0}setNotVisible(){this.cranckDoors.forEach((e=>e.visible=!1)),this.active=!1}rotateCranckZ(e){this.crancks.forEach((o=>o.rotateZ(e)))}lerpDoor(e,o){this.doors.forEach((e=>e.position.lerp(new t.Vector3(e.position.x,o,e.position.z),.03)))}getDoorY(){return this.doors[0].position.y}resetPos(){this.doors.forEach((e=>e.position.y=0))}cranckPosition(e,o){this.cranck.position.x=e,this.cranck.position.z=o}}var m=g})),parcelRequire.register("i5CJu",(function(e,o){$parcel$export(e.exports,"default",(()=>i));var t=parcelRequire("4xklQ");class a extends t.Mesh{constructor(){super(new t.TorusGeometry(.35,.05,10,20),new t.MeshPhongMaterial({color:"red"}))}}class r extends t.Mesh{constructor(e=.03,o=.03,a=.4,r=12,s=12,l="red"){super(new t.CylinderGeometry(e,o,a,r,s),new t.MeshPhongMaterial({color:l}))}}class s extends t.Mesh{constructor(e=.5,o=2,a=.15,r="white"){super(new t.BoxGeometry(e,o,a),new t.MeshPhongMaterial({color:r}))}}class l extends t.Object3D{constructor(){super(),this.index=0,this.x=0,this.z=0,this.active=!0;let e=new a;e.position.set(0,0,0);let o=new r;o.position.set(0,.17,0);let t=new r;t.rotateZ(Math.PI/3.5),t.position.set(.15,-.12,0);let l=new r;l.rotateZ(Math.PI/-3.5),l.position.set(-.14,-.11,0);let i=new r(.08,.08,.06,12,12,"red");i.rotateX(Math.PI/2),i.position.set(0,0,0);let n=new r(.065,.065,.061,12,12,"lightgray");n.rotateX(Math.PI/2),n.position.set(0,0,0);let p=new r(.045,.045,.075,6,12,"gray");p.rotateX(Math.PI/2),p.position.set(0,0,0);let d=new r(.02,.035,.2,12,12,"gray");d.rotateX(Math.PI/2),d.position.set(0,0,-.1);let c=new r(.05,.05,.07,6,12,"gray");return c.rotateX(Math.PI/2),c.position.set(0,0,-.2),new s(.5,.5,.05,"lightgray").position.set(0,0,-.25),this.add(e),this.add(o),this.add(t),this.add(l),this.add(i),this.add(n),this.add(p),this.add(d),this.add(c),this}correctPos(e,o,t){"right"==e?(this.position.set(this.position.x,this.position.y,this.position.z-.72),o.position.set(this.position.x,this.position.y,this.position.z-2),t.position.set(this.position.x,this.position.y,this.position.z-.25)):"left"==e?(this.rotateY(Math.PI),this.position.set(this.position.x,this.position.y,this.position.z+.72),o.position.set(this.position.x,this.position.y,this.position.z+1),t.position.set(this.position.x,this.position.y,this.position.z+.25)):"down"==e?(this.rotateY(-Math.PI/2),this.position.set(this.position.x+.72,this.position.y,this.position.z),o.position.set(this.position.x+1,this.position.y,this.position.z),t.position.set(this.position.x+.25,this.position.y,this.position.z),t.rotateY(Math.PI/2)):"up"==e&&(this.rotateY(Math.PI/2),this.position.set(this.position.x-.72,this.position.y,this.position.z),o.position.set(this.position.x-2,this.position.y,this.position.z),t.position.set(this.position.x-.25,this.position.y,this.position.z),t.rotateY(Math.PI/2))}}var i=l})),parcelRequire.register("bbyur",(function(e,o){e.exports=new URL("../"+parcelRequire("dRo73").resolve("3gt2g"),import.meta.url).toString()})),parcelRequire.register("7k7o1",(function(e,o){$parcel$export(e.exports,"default",(()=>s));var t=parcelRequire("4xklQ");class a extends t.Mesh{constructor(e=.5,o=2,a=.15,r="white"){super(new t.BoxGeometry(e,o,a),new t.MeshPhongMaterial({color:r}))}}class r extends t.Object3D{constructor(){super(),this.index=0,this.x=0,this.z=0;let e=new a(.5,.5,.05,"lightgray");return this.add(e),this}}var s=r})),parcelRequire.register("j0YSa",(function(e,o){$parcel$export(e.exports,"default",(()=>n));var t=parcelRequire("4xklQ");parcelRequire("acMZl");class a extends t.Mesh{constructor(){super(new t.BoxGeometry(.5,2,.15),new t.MeshPhongMaterial({color:"white"}))}}class r extends t.Mesh{constructor(){super(new t.TorusGeometry(.15,.05,10,20),new t.MeshPhongMaterial({color:"black"}))}}class s extends t.Mesh{constructor(){super(new t.BoxGeometry(.5,2,.1),new t.MeshPhongMaterial({color:"white"}))}}class l extends t.Mesh{constructor(e){super(new t.CylinderGeometry(.1,.1,2,64,64),new t.MeshPhongMaterial({emissive:e,color:e,emissiveIntensity:1,transparent:!0,opacity:.7}))}}class i extends t.Object3D{constructor(e){super(),this.index=0,this.x=0,this.z=0,this.state=e,this.active=!0,this.type=e;let o=new s;o.rotateX(-Math.PI/2),o.position.set(0,-.95,0);let t=new a;t.position.set(0,0,-.93);let i=new a;i.position.set(0,0,.93);let n=new r;n.position.set(0,.6,.85);let p=new r;p.position.set(0,.6,-.85);let d=new r;d.position.set(0,0,.85);let c=new r;c.position.set(0,0,-.85);let g=new r;g.position.set(0,-.6,.85);let m=new r;m.position.set(0,-.6,-.85);let M=new l("blue");M.rotateX(-Math.PI/2),M.position.set(0,.6,0);let b=new l("blue");b.rotateX(-Math.PI/2),b.position.set(0,0,0);let h=new l("blue");h.rotateX(-Math.PI/2),h.position.set(0,-.6,0),this.blueLasers=[M,b,h];let u=new l("red");u.rotateX(-Math.PI/2),u.position.set(0,.6,0);let w=new l("red");w.rotateX(-Math.PI/2),w.position.set(0,0,0);let k=new l("red");return k.rotateX(-Math.PI/2),k.position.set(0,-.6,0),this.redLasers=[u,w,k],"blue"==e?(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue"):"red"!=e&&"multiColor"!=e||(this.blueLasers.forEach((e=>e.visible=!1)),this.state="red"),this.add(o),this.add(t),this.add(i),this.add(n),this.add(p),this.add(d),this.add(c),this.add(g),this.add(m),this.add(M),this.add(b),this.add(h),this.add(u),this.add(w),this.add(k),this}setVisible(){this.active=!0}setNotVisible(){this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!1)),this.active=!1}setBlue(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!0)),this.redLasers.forEach((e=>e.visible=!1)),this.state="blue")}setRed(){1==this.active&&(this.blueLasers.forEach((e=>e.visible=!1)),this.redLasers.forEach((e=>e.visible=!0)),this.state="red")}}var n=i})),parcelRequire.register("4Bhaq",(function(e,o){$parcel$export(e.exports,"default",(()=>c));const t=[{filter:new RegExp("^andarFrente(\\s+)?\\((\\s+)?(0|[1-9][0-9]*)(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^andarTras(\\s+)?\\((\\s+)?(0|[1-9][0-9]*)(\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"},{filter:new RegExp("^coletarCristal(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"normal"},{filter:new RegExp("^desativarLaserAzul(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^desativarLaserVermelho(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"mustCondition"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),type:"conditional"},{filter:new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"conditional&&blockValidation"},{filter:new RegExp("^senão$"),type:"elseValidation"},{filter:new RegExp("^senão(\\s+)?{$"),type:"elseValidation&&blockValidation"},{filter:new RegExp("^}$"),type:"closeBlockValidation"},{filter:new RegExp("^{$"),type:"blockValidation"},{filter:new RegExp("^enquanto(\\s+)?\\((\\s+)?.+\\)$"),type:"loop"},{filter:new RegExp("^enquanto(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),type:"loop&&blockValidation"},{filter:new RegExp("^girarManivela(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),type:"sequential"}],a=[new RegExp("true"),new RegExp("false"),new RegExp("^laserAzulAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$"),new RegExp("^laserVermelhoAtivo(\\s+)?\\((\\s+)?\\)(\\s+)?$"),new RegExp("^portaFechada(\\s+)?\\((\\s+)?\\)(\\s+)?$")];function r(e){let o=e.trim(),t=e.substring(o.indexOf("(")+1,o.lastIndexOf(")"));for(let e=0;e<a.length;e++)if(a[e].test(t.trim()))return!0;return!1}function s(e,o){let t=!1,a=0;for(let r=o+1;r<e.length;r++)if(e[r].includes("}")){if(0==a){t=!0;break}a--}else{if(!e[r].includes("{"))continue;a++}return t}function l(e,o){let t=!1;for(let a=o-1;a>=0;a--)if(e[a].includes("{")){t=!0;break}return t}function i(e,o){let t=!1,a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?(\\s+)?$"),r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^}]*?$"),l=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),i=new RegExp("^senão$"),n=new RegExp("^senão(\\s+)?{$"),p=new RegExp("^senão(\\s+)?.+(\\s+)?$"),d=new RegExp("^senão(\\s+)?{[^]*?$"),c=null;for(let t=o-1;t>=0;t--)if(r.test(e[t].trim())||l.test(e[t].trim())||i.test(e[t].trim())||n.test(e[t].trim())){c=t;break}if(null!=c){let r="";for(let t=c;t<o;t++)r+=`${e[t].trim()}\n`;return a.test(r.trim())||s.test(r.trim())||p.test(r.trim())||d.test(r.trim())?(t=!0,t):t}return t}function n(e,o){let t=!1,a=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?.+(\\s+)?$"),r=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)$"),s=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{[^]*?}$"),l=new RegExp("^se(\\s+)?\\((\\s+)?.+\\)(\\s+)?{$"),i=null;for(let t=o-1;t>=0;t--)if(r.test(e[t].trim())||l.test(e[t].trim())){i=t;break}if(null!=i){let r="";for(let t=i;t<o;t++)r+=`${e[t].trim()}\n`;return a.test(r.trim())||s.test(r.trim())?(t=!0,t):t}return t}function p(e,o){const t=[new RegExp("^andarFrente(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^andarTras(\\s+)?\\((\\s+)?\\d+(\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarEsquerda(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^girarDireita(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$"),new RegExp("^darMeiaVolta(\\s+)?\\((\\s+)?\\)(\\s+)?(;)?$")];let a=[0,5],r=0,s="+",l=0;function i(e){return[{axis:0,value:"+"},{axis:1,value:"+"},{axis:0,value:"-"},{axis:1,value:"-"}][e]}function n(e){return e>3?0:e<0?3:e}for(let p=0;p<o;p++)if(t[0].test(e[p])){let o=parseInt(e[p].substring(e[p].indexOf("(")+1,e[p].indexOf(")")));"+"==s?a[r]+=o:a[r]-=o}else if(t[1].test(e[p])){let o=parseInt(e[p].substring(e[p].indexOf("(")+1,e[p].indexOf(")")));"-"==s?a[r]+=o:a[r]-=o}else if(t[2].test(e[p])){l--,l=n(l);const e=i(l);r=e.axis,s=e.value}else if(t[3].test(e[p])){l++,l=n(l);const e=i(l);r=e.axis,s=e.value}else{if(!t[4].test(e[p]))continue;{l--,l=n(l),l--,l=n(l);const e=i(l);r=e.axis,s=e.value}}return"+"==s?a[r]++:a[r]--,a}function d(e,o){document.getElementById("consoleArea").innerText+=`Código inválido: ${e} linha: ${o}\n`}function c(e,o=0){let a="async function runCode(){\n",c="\n",g=e.split("\n"),m=!0,M=0;for(let e=0;e<g.length;e++){let b,h=!1;if(""!=g[e].trim()){for(let o=0;o<t.length;o++)if(h=t[o].filter.test(g[e].trim()),h){b=t[o].type;break}if(!h){d(g[e],e+1),m=!1;break}if("sequential"===b){a+=`await ${g[e].trim()}\n`,M++}else if("conditional&&blockValidation"===b){let o=!1;if(s(g,e)?r(g[e])?o=!0:d(`${g[e]} (Condição inválida)`,e+1):d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!o){m=!1;break}{let o=g[e].trim();a+=`if${o.substring(o.indexOf("("))}\n`,M++}}else if("conditional"===b){if(!r(g[e])){d(`${g[e]} (Condição inválida)`,e+1),m=!1;break}{let o=g[e].trim();a+=`if${o.substring(o.indexOf("("))}\n`,M++}}else if("elseValidation"===b){if(!n(g,e)){d(`${g[e]} (Condição inválida)`,e+1),m=!1;break}a+="else\n",M++}else if("elseValidation&&blockValidation"===b){let o=!1;if(s(g,e)?n(g,e)?o=!0:d(`${g[e]} (Condição inválida)`,e+1):d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!o){m=!1;break}a+="else{\n",M++}else if("blockValidation"===b){if(!s(g,e)){d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),m=!1;break}a+=`${g[e].trim()}\n`,M++}else if("closeBlockValidation"===b){if(!l(g,e)){d(`${g[e]} (Bloco é fechado mas nunca é aberto)`,e+1),m=!1;break}a+=`${g[e].trim()}\n`,M++}else if("mustCondition"===b)if(i(g,e)){a+=`${g[e].trim()}\n`,M++}else{let o=t[6].filter.test(g[e].trim())?"blue":"red",r=p(g,e);c+=`badLuck([${r[0]},${r[1]}],'${o}')\n`,a+=`${g[e].trim()}\n`,M++}else if("loop"===b){if(!r(g[e])){d(`${g[e]} (Condição inválida)`,e+1),m=!1;break}{let o=g[e].trim();a+=`while${o.substring(o.indexOf("("))}\n`,M++}}else if("loop&&blockValidation"===b){let o=!1;if(s(g,e)?r(g[e])?o=!0:d(`${g[e]} (Condição inválida)`,e+1):d(`${g[e]} (Bloco é aberto mas nunca é fechado)`,e+1),!o){m=!1;break}{let o=g[e].trim();a+=`while${o.substring(o.indexOf("("))}\n`,M++}}else{a+=`${g[e].trim()}\n`,M++}if(o>0&&M>o){document.getElementById("consoleArea").innerText+=`Aviso: O código tem mais linhas do que o robô pode processar. Tente rescrever seu código em ${o} linhas ou menos.\n`,m=!1;break}}}return m?(a+=`}${c}runCode()\n`,a):null}})),parcelRequire.register("b4qUs",(function(e,o){e.exports=new URL("../"+parcelRequire("dRo73").resolve("4fPva"),import.meta.url).toString()}));var $63d4a3ac238052ba$exports={};parcelRequire("dRo73").register(JSON.parse('{"houcP":"index.1fc24b7a.js","3gt2g":"door2.e849dc7b.jpg","4fPva":"metalWallLvl4.5fc1d8f6.jpg","jgwT2":"index.cf3c8a2e.js","hWKcz":"index.5a96cabf.js"}')),parcelRequire("b0KIW");